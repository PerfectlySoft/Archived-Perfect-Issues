<!-- 
RSS generated by JIRA (7.3.0#73011-sha1:3c73d0e0b5ea20e2128531b9adf9b0585752b90a) at Tue Feb 06 20:49:26 UTC 2018

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
http://jira.perfect.org:8080/si/jira.issueviews:issue-xml/ISS-225/ISS-225.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>PerfectlySoft JIRA</title>
    <link>http://jira.perfect.org:8080</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>7.3.0</version>
        <build-number>73011</build-number>
        <build-date>03-01-2017</build-date>
    </build-info>

<item>
            <title>[ISS-225] Setup Server with SSL/TLS Certificate</title>
                <link>http://jira.perfect.org:8080/browse/ISS-225</link>
                <project id="10007" key="ISS">Issues</project>
                    <description>&lt;p&gt;Hello,&lt;/p&gt;

&lt;p&gt;I wanna setup a server which is available via https and until now, I have the following code:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; PerfectLib
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; PerfectHTTP
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; PerfectHTTPServer
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; Foundation

let server = HTTPServer()
&lt;span class=&quot;code-keyword&quot;&gt;var&lt;/span&gt; routes = Routes()

routes.add(method: .get, uri: &lt;span class=&quot;code-quote&quot;&gt;&quot;/&quot;&lt;/span&gt;, handler: {
		request, response in
    print(&lt;span class=&quot;code-quote&quot;&gt;&quot;GET&quot;&lt;/span&gt;)
		response.appendBody(string: &lt;span class=&quot;code-quote&quot;&gt;&quot;&amp;lt;html&amp;gt;&amp;lt;title&amp;gt;Hello, world!&amp;lt;/title&amp;gt;&amp;lt;body&amp;gt;Hello, world!&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&quot;&lt;/span&gt;)
		response.completed()
	}
)

routes.add(method: .post, uri: &lt;span class=&quot;code-quote&quot;&gt;&quot;/&quot;&lt;/span&gt;, handler: { (request, response) in
    print(&lt;span class=&quot;code-quote&quot;&gt;&quot;POST&quot;&lt;/span&gt;)
    response.appendBody(string: &lt;span class=&quot;code-quote&quot;&gt;&quot;\(request.postBodyString)&quot;&lt;/span&gt;)
    response.completed()
    }
)

server.addRoutes(routes)
server.serverPort = 8181
server.documentRoot = &lt;span class=&quot;code-quote&quot;&gt;&quot;./webroot&quot;&lt;/span&gt;
&lt;span class=&quot;code-comment&quot;&gt;// server.ssl(sslCert: &lt;span class=&quot;code-quote&quot;&gt;&quot;&quot;, sslKey: &quot;&lt;/span&gt;&quot;)
&lt;/span&gt;
&lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; {
	&lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; server.start()
} &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; PerfectError.networkError(let err, let msg) {
	print(&lt;span class=&quot;code-quote&quot;&gt;&quot;Network error thrown: \(err) \(msg)&quot;&lt;/span&gt;)
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So I tried to set the SSL to the server but I have no idea how to set the certificate. I want to use a certificate from Let&apos;s encrypt. I hope somebody can help with this.&lt;/p&gt;</description>
                <environment></environment>
        <key id="10653">ISS-225</key>
            <summary>Setup Server with SSL/TLS Certificate</summary>
                <type id="10109" iconUrl="http://jira.perfect.org:8080/secure/viewavatar?size=xsmall&amp;avatarId=10304&amp;avatarType=issuetype">Support Request</type>
                                                <status id="5" iconUrl="http://jira.perfect.org:8080/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="10001">Won&apos;t Do</resolution>
                                        <assignee username="rocky">Rockford Wei</assignee>
                                    <reporter username="hengel2810">Henrik Engelbrink</reporter>
                            <created>Thu, 21 Jul 2016 14:31:12 -0400</created>
                <updated>Fri, 21 Apr 2017 09:30:42 -0400</updated>
                            <resolved>Fri, 21 Apr 2017 09:30:42 -0400</resolved>
                                                                    <component>HTTP Suite</component>
                        <due></due>
                            <votes>2</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="11536" author="bitmangler" created="Wed, 19 Apr 2017 21:53:27 -0400"  >&lt;p&gt;Per the code you show (where you have &apos;let server = HTTPServer()&apos;&lt;/p&gt;

&lt;p&gt;with that &apos;server&apos; reference...&lt;/p&gt;

&lt;p&gt;you will will set 2 paths to your certificate and key&lt;/p&gt;

&lt;p&gt;here&apos;s my example:&lt;/p&gt;

&lt;p&gt;server.ssl = (sslCert: &quot;/Users/steven/certs/certificate.crt&quot;,&lt;br/&gt;
 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; sslKey: &quot;/Users/steven/certs/certificate.key&quot;)&lt;/p&gt;

&lt;p&gt;NOTE1: that might instead need to be --&amp;gt; server?.ssl = &#160;&lt;/p&gt;

&lt;p&gt;(depending upon whether your reference is defined as optional or not)&lt;/p&gt;

&lt;p&gt;&#160;&lt;/p&gt;

&lt;p&gt;NOTE2: Per my certificate &amp;amp; key ...you can tell by my paths, that I have located both &quot;certificate.crt&quot; and &quot;certificate.key&quot; on my OsX system with the path /Users/steven/certs/&lt;/p&gt;

&lt;p&gt;I tested with a self signed certificate that I created with the openssl command in the OsX shell.&#160;&#160; Self Signed cert worked perfectly.&lt;/p&gt;

&lt;p&gt;You can tell it is working if you are running Perfect Server under Xcodde debugger...when you &quot;start&quot; your &quot;server&quot; instance it will print out the URL where your server is providing service.&#160;&#160; That URL will start with http(s)&#160; verses just http.&#160;&#160; That&apos;s one way to know you are fully working with SSL (HTTPS).&lt;/p&gt;

&lt;p&gt;&#160;&lt;/p&gt;

&lt;p&gt;&#160;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10400" key="com.atlassian.servicedesk.approvals-plugin:sd-approvals">
                        <customfieldname>Approvals</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10200" key="com.atlassian.jira.plugin.system.customfieldtypes:textfield">
                        <customfieldname>External issue ID</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>212</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10500" key="com.atlassian.servicedesk:sd-customer-organizations">
                        <customfieldname>Organizations</customfieldname>
                        <customfieldvalues>
                                
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10005" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i001q7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10101" key="com.atlassian.servicedesk:sd-request-participants">
                        <customfieldname>Request participants</customfieldname>
                        <customfieldvalues>
                                
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_10104" key="com.atlassian.servicedesk:sd-sla-field">
                        <customfieldname>Time to resolution</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>