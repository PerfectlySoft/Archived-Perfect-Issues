<!-- 
RSS generated by JIRA (7.3.0#73011-sha1:3c73d0e0b5ea20e2128531b9adf9b0585752b90a) at Tue Feb 06 20:49:03 UTC 2018

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
http://jira.perfect.org:8080/si/jira.issueviews:issue-xml/ISS-177/ISS-177.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>PerfectlySoft JIRA</title>
    <link>http://jira.perfect.org:8080</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>7.3.0</version>
        <build-number>73011</build-number>
        <build-date>03-01-2017</build-date>
    </build-info>

<item>
            <title>[ISS-177] Tutorial Contest Entry - Introduction to Perfect Video Series</title>
                <link>http://jira.perfect.org:8080/browse/ISS-177</link>
                <project id="10007" key="ISS">Issues</project>
                    <description>&lt;h1&gt;&lt;a name=&quot;HiEveryone%21&quot;&gt;&lt;/a&gt;Hi Everyone!&lt;/h1&gt;

&lt;p&gt;I have been hard at work learning &lt;em&gt;Perfect&lt;/em&gt; and making tutorial videos in my spare time. This is by far not finished yet, but since the introduction section is done, I figured it was time to share it with the community. &lt;/p&gt;

&lt;h2&gt;&lt;a name=&quot;SobeginningtodayIhavefourvideosforyou%3A&quot;&gt;&lt;/a&gt;So beginning today I have four videos for you:&lt;/h2&gt;

&lt;p&gt;1. How to setup an Xcode Workspace (HelloPerfect Part 1): &lt;a href=&quot;https://www.youtube.com/watch?v=LNU6L2pnq0k&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://www.youtube.com/watch?v=LNU6L2pnq0k&lt;/a&gt;&lt;br/&gt;
2. How to host your first Web Application with a custom route (Hello Perfect Part 2): &lt;a href=&quot;https://www.youtube.com/watch?v=rYV9M64pPv8&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://www.youtube.com/watch?v=rYV9M64pPv8&lt;/a&gt;&lt;br/&gt;
3. How to host web content (a website) with Perfect: &lt;a href=&quot;https://www.youtube.com/watch?v=J441eJ40PH4&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://www.youtube.com/watch?v=J441eJ40PH4&lt;/a&gt;&lt;br/&gt;
4. How to host dynamic content using Mustache Templates and Handlers: &lt;a href=&quot;https://www.youtube.com/watch?v=SX9aX2aYzpw&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://www.youtube.com/watch?v=SX9aX2aYzpw&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;&lt;a name=&quot;Update%3AMay5th%3A&quot;&gt;&lt;/a&gt;Update: May 5th:&lt;/h2&gt;

&lt;p&gt;Video 5 is live!&lt;/p&gt;

&lt;p&gt;5. How to encode JSON: &lt;a href=&quot;https://youtu.be/EwoXL_ZnA3s&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://youtu.be/EwoXL_ZnA3s&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I have also combined them into one easy playlist here: &lt;a href=&quot;https://www.youtube.com/playlist?list=PLE2M81Pddau3LrJRGPbc6UXMy3VQuA2lL&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://www.youtube.com/playlist?list=PLE2M81Pddau3LrJRGPbc6UXMy3VQuA2lL&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;&lt;a name=&quot;Update%3AMay6th%3A&quot;&gt;&lt;/a&gt;Update: May 6th:&lt;/h2&gt;

&lt;p&gt;Video 6 is live!&lt;/p&gt;

&lt;p&gt;6. Start working with POST requests: &lt;a href=&quot;https://youtu.be/IwkbRxDZaBA&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://youtu.be/IwkbRxDZaBA&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;&lt;a name=&quot;MoretoCome&quot;&gt;&lt;/a&gt;More to Come&lt;/h2&gt;

&lt;p&gt;Again, this is only the beginning for me as I prepare an entire online course in everything Perfect has to offer. Things I have planned: &lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;How to hookup a database and work with the database connectors&lt;/li&gt;
	&lt;li&gt;How to use Perfect&apos;s built-in JSON&lt;/li&gt;
	&lt;li&gt;How to create a Private API &amp;amp; an iOS app that uses that API&lt;/li&gt;
	&lt;li&gt;How to create a public API&lt;/li&gt;
	&lt;li&gt;How to work with Perfect&apos;s built-in curl library&lt;/li&gt;
	&lt;li&gt;How to tie all of it together in one application (an API, web app, mobile app, database, custom routes, and mustache as one project)&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;&lt;a name=&quot;Ifyoulikemytutorials%2Cpleasegivehitthelikebuttonintheupperrightcorner%28lookslike%F0%9F%98%80%29andselectthe%22thumbsup%22tovoteformeinthecompetition%2Candthankyouforwatching%21&quot;&gt;&lt;/a&gt;If you like my tutorials, please give hit the like button in the upper right corner (looks like +��) and select the &quot;thumbs up&quot; to vote for me in the competition, and thank you for watching!&lt;/h3&gt;

&lt;p&gt;Edit: Made Voting Instructions More Clear&lt;br/&gt;
Edit 2: Added Video 5: Encoding JSON&lt;br/&gt;
Edit 3: Added Video 6: Working with POST&lt;/p&gt;</description>
                <environment></environment>
        <key id="10605">ISS-177</key>
            <summary>Tutorial Contest Entry - Introduction to Perfect Video Series</summary>
                <type id="10109" iconUrl="http://jira.perfect.org:8080/secure/viewavatar?size=xsmall&amp;avatarId=10304&amp;avatarType=issuetype">Support Request</type>
                                                <status id="6" iconUrl="http://jira.perfect.org:8080/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="rymcol">Ryan Collins</reporter>
                            <created>Wed, 4 May 2016 09:51:46 -0400</created>
                <updated>Tue, 17 May 2016 15:06:11 -0400</updated>
                                                                                <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="10612" author="rymcol" created="Wed, 4 May 2016 09:57:32 -0400"  >&lt;p&gt;If this gets popular enough, I will also do the same for Ubuntu and make a couple videos on deployment using a platform (AWS, Docker, Heroku)&lt;/p&gt;</comment>
                            <comment id="10613" author="gjnilsen" created="Wed, 4 May 2016 10:37:29 -0400"  >&lt;p&gt;I would really know how to set it up with Apple Server 5.1 with TLS. A tutorial setting up that would bee great.&lt;/p&gt;</comment>
                            <comment id="10614" author="rymcol" created="Wed, 4 May 2016 10:39:13 -0400"  >&lt;p&gt;@yuppielabel Noted. I have a few Mac Mini&apos;s pretending to be servers in my closet. I will add that to my curriculum as a &quot;production environment&quot; series.  &lt;/p&gt;</comment>
                            <comment id="10615" author="rymcol" created="Wed, 4 May 2016 10:56:48 -0400"  >&lt;h2&gt;&lt;a name=&quot;Connectwithme&quot;&gt;&lt;/a&gt;Connect with me&lt;/h2&gt;

&lt;p&gt;If anyone would like to connect with me you can find my social links at &lt;a href=&quot;http://ryanmcollins.com/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://ryanmcollins.com/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="10616" author="miwand" created="Wed, 4 May 2016 15:03:01 -0400"  >&lt;p&gt;Awesome work, was really easy to follow. Got me excited for more.&lt;/p&gt;</comment>
                            <comment id="10617" author="rymcol" created="Wed, 4 May 2016 15:12:09 -0400"  >&lt;p&gt;&lt;a href=&quot;http://jira.perfect.org:8080/secure/ViewProfile.jspa?name=miwand&quot; class=&quot;user-hover&quot; rel=&quot;miwand&quot;&gt;Miwand Najafe&lt;/a&gt; Thanks a bunch!&lt;/p&gt;</comment>
                            <comment id="10618" author="dnunez32" created="Wed, 4 May 2016 18:03:10 -0400"  >&lt;p&gt;Fantastic work on this Ryan.&lt;/p&gt;</comment>
                            <comment id="10619" author="rymcol" created="Wed, 4 May 2016 18:35:55 -0400"  >&lt;p&gt;@dnunez32 @HardcoreIOS Thanks!&lt;/p&gt;</comment>
                            <comment id="10620" author="shaneqi" created="Thu, 5 May 2016 01:45:11 -0400"  >&lt;p&gt;Thank you for the tutorial, can&apos;t wait for the build-in JSON part.&lt;/p&gt;

&lt;p&gt;I&apos;ve encountered this error in encoding dictionary: &lt;a href=&quot;https://github.com/PerfectlySoft/Perfect/issues/165&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/PerfectlySoft/Perfect/issues/165&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Do you have any idea what the problem of my way is?&lt;/p&gt;</comment>
                            <comment id="10621" author="rymcol" created="Thu, 5 May 2016 09:39:11 -0400"  >&lt;p&gt;@qizt I posted a solution that you can use for you situation on &lt;a href=&quot;http://jira.perfect.org:8080/browse/ISS-178&quot; title=&quot;&amp;quot;array cannot be bridged from Objective-C&amp;quot; when encode [[String: AnyObject]] object with jsonEncoder.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ISS-178&quot;&gt;ISS-178&lt;/a&gt; &lt;/p&gt;</comment>
                            <comment id="10622" author="rymcol" created="Thu, 5 May 2016 14:05:28 -0400"  >&lt;h1&gt;&lt;a name=&quot;EncodingJSON%21&quot;&gt;&lt;/a&gt;Encoding JSON!&lt;/h1&gt;

&lt;p&gt;Issue &lt;a href=&quot;http://jira.perfect.org:8080/browse/ISS-178&quot; title=&quot;&amp;quot;array cannot be bridged from Objective-C&amp;quot; when encode [[String: AnyObject]] object with jsonEncoder.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ISS-178&quot;&gt;ISS-178&lt;/a&gt; by @qizt had a good question: &quot;How do I encode JSON&quot;&lt;/p&gt;

&lt;p&gt;This was a relatively short topic, so I took some time on my lunch break today to try to answer that in context with how it was asked in a New Video.&lt;/p&gt;

&lt;p&gt;You can watch it at: &lt;a href=&quot;https://youtu.be/EwoXL_ZnA3s&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://youtu.be/EwoXL_ZnA3s&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                            <comment id="10623" author="kingiol" created="Thu, 5 May 2016 23:26:57 -0400"  >&lt;p&gt;&lt;a href=&quot;http://jira.perfect.org:8080/secure/ViewProfile.jspa?name=rymcol&quot; class=&quot;user-hover&quot; rel=&quot;rymcol&quot;&gt;Ryan Collins&lt;/a&gt; awesome&#65292; Thanks a lot&lt;/p&gt;</comment>
                            <comment id="10624" author="shaneqi" created="Fri, 6 May 2016 03:17:05 -0400"  >&lt;p&gt;&lt;a href=&quot;http://jira.perfect.org:8080/secure/ViewProfile.jspa?name=rymcol&quot; class=&quot;user-hover&quot; rel=&quot;rymcol&quot;&gt;Ryan Collins&lt;/a&gt; Thank you for the video with JSONEncoder!&lt;/p&gt;

&lt;p&gt;Here I have some suggestion.&lt;/p&gt;

&lt;p&gt;&amp;lt;img width=&quot;459&quot; alt=&quot;screen shot 2016-05-06 at 01 53 56&quot; src=&quot;https://cloud.githubusercontent.com/assets/7324708/15066269/898896b6-132d-11e6-86dc-6aec2c703113.png&quot;&amp;gt;&lt;br/&gt;
Above is a snippet of code from your video, you traversed the array &lt;tt&gt;cars&lt;/tt&gt; to encode car objects.&lt;br/&gt;
You were totally right, because type of &lt;tt&gt;cars&lt;/tt&gt; is &lt;tt&gt;[&lt;span class=&quot;error&quot;&gt;&amp;#91;String: JSONValue&amp;#93;&lt;/span&gt;]&lt;/tt&gt;, it cannot be encoded.&lt;/p&gt;

&lt;p&gt;The reason is JSONEncoder doesn&apos;t accept such &apos;array of dictionary&apos; type.&lt;br/&gt;
However, JSONEncoder accepts &lt;tt&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;JSONValue&amp;#93;&lt;/span&gt;&lt;/tt&gt; according to PerfectLib documents.&lt;/p&gt;

&lt;p&gt;So what I want to say is I have a elegant way encoding an array other than traversing it:&lt;br/&gt;
The trick is just declaring objects array &lt;tt&gt;cars&lt;/tt&gt; as &lt;tt&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;JSONValue&amp;#93;&lt;/span&gt;&lt;/tt&gt;, then it can be encoded.&lt;/p&gt;

&lt;p&gt;So code would be:&lt;br/&gt;
&amp;lt;img width=&quot;440&quot; alt=&quot;screen shot 2016-05-06 at 02 04 16&quot; src=&quot;https://cloud.githubusercontent.com/assets/7324708/15066454/dd6735f2-132e-11e6-86fd-7f8d13bcd21d.png&quot;&amp;gt;&lt;/p&gt;

&lt;p&gt;And the respond would be:&lt;br/&gt;
&amp;lt;img width=&quot;273&quot; alt=&quot;screen shot 2016-05-06 at 02 03 28&quot; src=&quot;https://cloud.githubusercontent.com/assets/7324708/15066471/f64805ba-132e-11e6-99fc-c526e64b4806.png&quot;&amp;gt;&lt;/p&gt;

&lt;p&gt;Format is also pretty good, because the array is encoded into JSON string directly.&lt;/p&gt;

&lt;p&gt;What I did is just add a type declaration into this line of code: &lt;br/&gt;
&lt;tt&gt;let cars = &lt;span class=&quot;error&quot;&gt;&amp;#91;car1, car2&amp;#93;&lt;/span&gt;&lt;/tt&gt;&lt;br/&gt;
&#11015;&#65039;&lt;br/&gt;
&lt;tt&gt;let cars: &lt;span class=&quot;error&quot;&gt;&amp;#91;JSONValue&amp;#93;&lt;/span&gt; = &lt;span class=&quot;error&quot;&gt;&amp;#91;car1, car2&amp;#93;&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;

&lt;p&gt;So what I&apos;ve learnt from this is: &lt;br/&gt;
JSONEncoder can really encode either Dictionary or Array. But the value must be declared as &lt;tt&gt;JSONValue&lt;/tt&gt;. &lt;/p&gt;</comment>
                            <comment id="10625" author="rymcol" created="Fri, 6 May 2016 07:59:53 -0400"  >&lt;p&gt;@qizt That&apos;s fantastic. Really shortens things! I will have to make an update to the video series soon. &lt;/p&gt;</comment>
                            <comment id="10626" author="rymcol" created="Fri, 6 May 2016 09:52:39 -0400"  >&lt;h1&gt;&lt;a name=&quot;UsinghttpPOST%21&quot;&gt;&lt;/a&gt;Using http POST!&lt;/h1&gt;

&lt;p&gt;Another day, another video!&lt;/p&gt;

&lt;p&gt;Get started handling POST in Perfect: &lt;a href=&quot;https://youtu.be/IwkbRxDZaBA&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://youtu.be/IwkbRxDZaBA&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="10627" author="lucasc53" created="Fri, 6 May 2016 10:06:35 -0400"  >&lt;p&gt;You are a MACHINE, @rymcol!&lt;/p&gt;</comment>
                            <comment id="10628" author="rymcol" created="Fri, 6 May 2016 10:21:19 -0400"  >&lt;p&gt;@LucasC53 definitely&lt;/p&gt;</comment>
                            <comment id="10629" author="rymcol" created="Mon, 9 May 2016 17:26:09 -0400"  >&lt;p&gt;As the contest is over, I have closed this thread. You can follow my future tutorials on &lt;a href=&quot;http://perfect.org/tutorials.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://perfect.org/tutorials.html&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="10630" author="soloshenko" created="Tue, 10 May 2016 11:25:41 -0400"  >&lt;p&gt;About Encoding JSON!&lt;br/&gt;
I think this method works better:&lt;br/&gt;
func serialization(object:AnyObject) -&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;UInt8&amp;#93;&lt;/span&gt;&lt;br/&gt;
{&lt;br/&gt;
do &lt;/p&gt;
{
let jsonData = try NSJSONSerialization.dataWithJSONObject(object, options: NSJSONWritingOptions.PrettyPrinted)
let count = jsonData.length / sizeof(UInt8)
var jsonArray = [UInt8|count: count, repeatedValue: 0]
jsonData.getBytes(&amp;amp;jsonArray, length:count * sizeof(UInt8))
return jsonArray

}
&lt;p&gt; catch let error as NSError {&lt;br/&gt;
print(error)&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;Then:&lt;br/&gt;
    func handleRequest(request: WebRequest, response: WebResponse)&lt;/p&gt;
    {
        let car1:[JSONKey: AnyObject] = [&quot;Wheel&quot;:4, &quot;Color&quot;:&quot;Black&quot;]
        let car2:[JSONKey: AnyObject] = [&quot;Wheel&quot;:3, &quot;Color&quot;:[&quot;mixColor&quot;:0xf2f2f2]]
        let cars                      = [car1, car2]
        response.appendBodyBytes(serialization(cars))
        response.requestCompletedCallback()
    }

&lt;p&gt;Details look this: &lt;a href=&quot;https://habrahabr.ru/post/283260/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://habrahabr.ru/post/283260/&lt;/a&gt;&lt;br/&gt;
Sorry, this article in Russain.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;image-wrap&quot; style=&quot;&quot;&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/1788577/15152041/8da8c420-16dc-11e6-8b79-d8b54980cc53.jpg&quot; style=&quot;border: 0px solid black&quot; /&gt;&lt;/span&gt;&lt;/p&gt;</comment>
                            <comment id="10631" author="robertbojor" created="Tue, 10 May 2016 12:05:14 -0400"  >&lt;p&gt;Unless you are planning to run the backend on a Mac, anything NS related&lt;br/&gt;
will not work on a Linux machine.&lt;/p&gt;

&lt;p&gt;I have deployed my test API on Heroku last night and I had to move away&lt;br/&gt;
from any NS related methods and types in order to succsessfuly compile the&lt;br/&gt;
code.&lt;/p&gt;

&lt;p&gt;On Tuesday, 10 May 2016, soloshenko &amp;lt;notifications@github.com&amp;gt; wrote:&lt;/p&gt;

&lt;p&gt;&amp;gt; About Encoding JSON!&lt;br/&gt;
&amp;gt; I think this method works better:&lt;br/&gt;
&amp;gt; func serialization(object:AnyObject) -&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;UInt8&amp;#93;&lt;/span&gt;&lt;br/&gt;
&amp;gt; {&lt;br/&gt;
&amp;gt; do &lt;/p&gt;
{
&amp;gt; let jsonData = try NSJSONSerialization.dataWithJSONObject(object, options:
&amp;gt; NSJSONWritingOptions.PrettyPrinted)
&amp;gt; let count = jsonData.length / sizeof(UInt8)
&amp;gt; var jsonArray = UInt8
&amp;gt; jsonData.getBytes(&amp;amp;jsonArray, length:count * sizeof(UInt8))
&amp;gt; return jsonArray
&amp;gt;
&amp;gt; }
&lt;p&gt; catch let error as NSError &lt;/p&gt;
{
&amp;gt; print(error)
&amp;gt; }
&lt;p&gt;&amp;gt;&lt;br/&gt;
&amp;gt; Then:&lt;br/&gt;
&amp;gt; func handleRequest(request: WebRequest, response: WebResponse)&lt;br/&gt;
&amp;gt; &lt;/p&gt;
{
&amp;gt; let car1:[JSONKey: AnyObject] = [&quot;Wheel&quot;:4, &quot;Color&quot;:&quot;Black&quot;]
&amp;gt; let car2:[JSONKey: AnyObject] = [&quot;Wheel&quot;:3, &quot;Color&quot;:[&quot;mixColor&quot;:0xf2f2f2]]
&amp;gt; let cars = [car1, car2]
&amp;gt; response.appendBodyBytes(serialization(cars))
&amp;gt; response.requestCompletedCallback()
&amp;gt; }
&lt;p&gt;&amp;gt;&lt;br/&gt;
&amp;gt; Details look this: &lt;a href=&quot;https://habrahabr.ru/post/283260/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://habrahabr.ru/post/283260/&lt;/a&gt;&lt;br/&gt;
&amp;gt; Sorry, this article in Russain.&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;image: image09&amp;#93;&lt;/span&gt;&lt;br/&gt;
&amp;gt; &amp;lt;&lt;a href=&quot;https://cloud.githubusercontent.com/assets/1788577/15152041/8da8c420-16dc-11e6-8b79-d8b54980cc53.jpg&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://cloud.githubusercontent.com/assets/1788577/15152041/8da8c420-16dc-11e6-8b79-d8b54980cc53.jpg&lt;/a&gt;&amp;gt;&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; &#8212;&lt;br/&gt;
&amp;gt; You are receiving this because you are subscribed to this thread.&lt;br/&gt;
&amp;gt; Reply to this email directly or view it on GitHub&lt;br/&gt;
&amp;gt; &amp;lt;&lt;a href=&quot;https://github.com/PerfectlySoft/Perfect/issues/164#issuecomment-218193201&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/PerfectlySoft/Perfect/issues/164#issuecomment-218193201&lt;/a&gt;&amp;gt;&lt;br/&gt;
&amp;gt;&lt;/p&gt;


&lt;p&gt;&amp;#8211; &lt;br/&gt;
Kind regards,&lt;br/&gt;
Robert Bojor&lt;br/&gt;
Mobile &amp;amp; Web Developer&lt;br/&gt;
&lt;a href=&quot;http://www.robertbojor.com/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.robertbojor.com/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="10632" author="rymcol" created="Tue, 10 May 2016 12:13:37 -0400"  >&lt;p&gt;&lt;a href=&quot;http://jira.perfect.org:8080/secure/ViewProfile.jspa?name=soloshenko&quot; class=&quot;user-hover&quot; rel=&quot;soloshenko&quot;&gt;soloshenko&lt;/a&gt; @robertBojor is correct, while NSJSONSerialization is perfectly fine on the Mac for OS X/iOS, it will not work on Ubuntu, so the preferred method is to use Perfect&apos;s internal library. Also, the point of the tutorial is not to teach NSJSON and other framework methods, but to teach the methods included with Perfect. &lt;/p&gt;</comment>
                            <comment id="10633" author="soloshenko" created="Fri, 13 May 2016 04:49:46 -0400"  >&lt;p&gt;&lt;a href=&quot;http://jira.perfect.org:8080/secure/ViewProfile.jspa?name=robertBojor&quot; class=&quot;user-hover&quot; rel=&quot;robertBojor&quot;&gt;Robert Bojor&lt;/a&gt; @rymcol &lt;b&gt;You are right.&lt;/b&gt;&lt;/p&gt;</comment>
                            <comment id="10634" author="keyofvv" created="Tue, 17 May 2016 07:11:02 -0400"  >&lt;p&gt;&lt;a href=&quot;http://jira.perfect.org:8080/secure/ViewProfile.jspa?name=rymcol&quot; class=&quot;user-hover&quot; rel=&quot;rymcol&quot;&gt;Ryan Collins&lt;/a&gt; awesome tutorials! Any tutorial how to integrate Perfect-MongoDB connector on Linux machine?&lt;/p&gt;</comment>
                            <comment id="10635" author="rymcol" created="Tue, 17 May 2016 09:35:47 -0400"  >&lt;p&gt;&lt;a href=&quot;http://jira.perfect.org:8080/secure/ViewProfile.jspa?name=keyOfVv&quot; class=&quot;user-hover&quot; rel=&quot;keyOfVv&quot;&gt;Ke Yang&lt;/a&gt; Thanks! I have not yet started any for Linux yet, I&apos;ve been focusing on OS X. I will do a separate series eventually on Ubuntu. &lt;/p&gt;</comment>
                            <comment id="10636" author="rymcol" created="Tue, 17 May 2016 15:06:11 -0400"  >&lt;p&gt;If anyone is still following this, the latest video is up: &lt;a href=&quot;https://www.youtube.com/watch?v=T7URx9ngivk&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://www.youtube.com/watch?v=T7URx9ngivk&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10400" key="com.atlassian.servicedesk.approvals-plugin:sd-approvals">
                        <customfieldname>Approvals</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10200" key="com.atlassian.jira.plugin.system.customfieldtypes:textfield">
                        <customfieldname>External issue ID</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>164</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10500" key="com.atlassian.servicedesk:sd-customer-organizations">
                        <customfieldname>Organizations</customfieldname>
                        <customfieldvalues>
                                
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10005" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i001fj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10101" key="com.atlassian.servicedesk:sd-request-participants">
                        <customfieldname>Request participants</customfieldname>
                        <customfieldvalues>
                                
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_10104" key="com.atlassian.servicedesk:sd-sla-field">
                        <customfieldname>Time to resolution</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>