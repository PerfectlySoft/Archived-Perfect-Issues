<!-- 
RSS generated by JIRA (7.3.0#73011-sha1:3c73d0e0b5ea20e2128531b9adf9b0585752b90a) at Tue Feb 06 20:48:18 UTC 2018

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
http://jira.perfect.org:8080/si/jira.issueviews:issue-xml/ISS-90/ISS-90.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>PerfectlySoft JIRA</title>
    <link>http://jira.perfect.org:8080</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>7.3.0</version>
        <build-number>73011</build-number>
        <build-date>03-01-2017</build-date>
    </build-info>

<item>
            <title>[ISS-90] Laravel style controllers</title>
                <link>http://jira.perfect.org:8080/browse/ISS-90</link>
                <project id="10007" key="ISS">Issues</project>
                    <description>&lt;p&gt;I set up a typical JSON API route using Perfect. &lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unable to find source-code formatter for language: swift.&lt;/span&gt; Available languages are: actionscript, html, java, javascript, none, sql, xhtml, xml&lt;/div&gt;&lt;pre&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; func PerfectServerModuleInit() {
    Routing.Handler.registerGlobally()
    
    Routing.Routes[&lt;span class=&quot;code-quote&quot;&gt;&quot;GET&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;heartbeat&quot;&lt;/span&gt;] = { response in
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; HeartbeatHandler()
    }
}

class HeartbeatHandler: RequestHandler {
    
    func handleRequest(request: WebRequest, response: WebResponse) {
        response.addHeader(&lt;span class=&quot;code-quote&quot;&gt;&quot;Content-Type&quot;&lt;/span&gt;, value: &lt;span class=&quot;code-quote&quot;&gt;&quot;application/json&quot;&lt;/span&gt;)
        let encoder = JSONEncode()
        
        &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; {
            let data = &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; encoder.encode([&lt;span class=&quot;code-quote&quot;&gt;&quot;lub&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;dub&quot;&lt;/span&gt;])
            response.appendBodyString(data)
        } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; {
            response.setStatus(500, message: &lt;span class=&quot;code-quote&quot;&gt;&quot;Could not create data&quot;&lt;/span&gt;)
        }
        
        response.requestCompletedCallback()
    }
    
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Though it works well, this is very verbose. It would be nicer if Perfect took some inspiration from Laravel like so.&lt;/p&gt;

&lt;p&gt;Routes.swift&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unable to find source-code formatter for language: swift.&lt;/span&gt; Available languages are: actionscript, html, java, javascript, none, sql, xhtml, xml&lt;/div&gt;&lt;pre&gt;
Route.get(&lt;span class=&quot;code-quote&quot;&gt;&quot;heartbeat&quot;&lt;/span&gt;) { request in 
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; HeartbeatController().index(request)
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;HeartbeatController.swift&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unable to find source-code formatter for language: swift.&lt;/span&gt; Available languages are: actionscript, html, java, javascript, none, sql, xhtml, xml&lt;/div&gt;&lt;pre&gt;
class HeartbeatController: Controller {
    func index(request: Request) -&amp;gt; AnyObject {
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;code-quote&quot;&gt;&quot;lub&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;dub&quot;&lt;/span&gt;]
    }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This wouldn&apos;t be hard to implement, but I&apos;m wondering if something like this is in the scope of Perfect, or if it&apos;s something that should be built as a separate project. &lt;/p&gt;

&lt;p&gt;I&apos;d be very interested in working on this.&lt;/p&gt;</description>
                <environment></environment>
        <key id="10518">ISS-90</key>
            <summary>Laravel style controllers</summary>
                <type id="10109" iconUrl="http://jira.perfect.org:8080/secure/viewavatar?size=xsmall&amp;avatarId=10304&amp;avatarType=issuetype">Support Request</type>
                                                <status id="6" iconUrl="http://jira.perfect.org:8080/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="tannernelson">Tanner</reporter>
                            <created>Mon, 18 Jan 2016 15:42:21 -0500</created>
                <updated>Thu, 28 Jan 2016 17:27:53 -0500</updated>
                                                                                <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="10405" author="kaandedeoglu" created="Thu, 28 Jan 2016 17:22:56 -0500"  >&lt;p&gt;+1 from me, this kind of syntax is very convenient for simple responses.&lt;/p&gt;

&lt;p&gt;For reference there are a few Swift frameworks that support this kind of syntax, namely:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tannernelson/vapor&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;Vapor&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;https://github.com/nestproject/Frank&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;Frank&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;https://github.com/Zewo/Router&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;Zewo&apos;s Router&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10400" key="com.atlassian.servicedesk.approvals-plugin:sd-approvals">
                        <customfieldname>Approvals</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10200" key="com.atlassian.jira.plugin.system.customfieldtypes:textfield">
                        <customfieldname>External issue ID</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>77</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10500" key="com.atlassian.servicedesk:sd-customer-organizations">
                        <customfieldname>Organizations</customfieldname>
                        <customfieldvalues>
                                
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10005" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i000w7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10101" key="com.atlassian.servicedesk:sd-request-participants">
                        <customfieldname>Request participants</customfieldname>
                        <customfieldvalues>
                                
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_10104" key="com.atlassian.servicedesk:sd-sla-field">
                        <customfieldname>Time to resolution</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>