<!-- 
RSS generated by JIRA (7.3.0#73011-sha1:3c73d0e0b5ea20e2128531b9adf9b0585752b90a) at Tue Feb 06 20:51:50 UTC 2018

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
http://jira.perfect.org:8080/si/jira.issueviews:issue-xml/ISS-526/ISS-526.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>PerfectlySoft JIRA</title>
    <link>http://jira.perfect.org:8080</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>7.3.0</version>
        <build-number>73011</build-number>
        <build-date>03-01-2017</build-date>
    </build-info>

<item>
            <title>[ISS-526] CURL request delay for large POST</title>
                <link>http://jira.perfect.org:8080/browse/ISS-526</link>
                <project id="10007" key="ISS">Issues</project>
                    <description></description>
                <environment></environment>
        <key id="11315">ISS-526</key>
            <summary>CURL request delay for large POST</summary>
                <type id="10102" iconUrl="http://jira.perfect.org:8080/secure/viewavatar?size=xsmall&amp;avatarId=10303&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="http://jira.perfect.org:8080/images/icons/priorities/medium.svg">Medium</priority>
                        <status id="1" iconUrl="http://jira.perfect.org:8080/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="kjessup">Kyle Jessup</assignee>
                                    <reporter username="crarau">Chip Rarau</reporter>
                            <created>Mon, 4 Sep 2017 20:02:47 -0400</created>
                <updated>Mon, 11 Sep 2017 09:15:33 -0400</updated>
                                                                                <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="11830" author="crarau" created="Mon, 4 Sep 2017 20:07:54 -0400"  >&lt;p&gt;The call is done from one swift Perfect client to the swift Perfect server.&lt;/p&gt;

&lt;p&gt;The body size is 200+ KB. Sending the same request using Postman there is no extra delay.&lt;br/&gt;
 if I add curl.setOption(CURLOPT_HTTPHEADER, s: &quot;Expect:&quot;) the response time drops from 2 seconds to 1 second for a request consistently. &lt;br/&gt;
 I read about it here: &lt;a href=&quot;https://github.com/openzipkin/docker-zipkin/issues/114&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/openzipkin/docker-zipkin/issues/114&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Even with header &quot;Expect:&quot; the Perfect CURL client is still waiting for 1 second before the post body is sent to the Perfect Server. In my tests the server takes&#160;0.18 sec to respond, the client still take 1 sec to get the result.&lt;/p&gt;

&lt;p&gt;All information point to &quot;Expect: 100-continue&quot; not being implemented on the server.&lt;br/&gt;
 More information here: &lt;a href=&quot;https://gms.tf/when-curl-sends-100-continue.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gms.tf/when-curl-sends-100-continue.html&lt;/a&gt;&lt;br/&gt;
 Another link: &lt;a href=&quot;https://curl.haxx.se/mail/lib-2010-01/0182.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://curl.haxx.se/mail/lib-2010-01/0182.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What&apos;s strange is that passing &quot;Expect:&quot; in the headers should make all waiting disappear, but it drops by 1 second only.&lt;/p&gt;

&lt;p&gt;Thanks for looking into this.&lt;br/&gt;
 Chip&lt;/p&gt;</comment>
                            <comment id="11832" author="kjessup" created="Tue, 5 Sep 2017 15:18:37 -0400"  >&lt;p&gt;What version of Perfect-HTTPServer is built there on the server?&lt;/p&gt;

&lt;p&gt;You will want at least 2.2.4.&lt;/p&gt;

&lt;p&gt;2.3.3 is the latest.&lt;/p&gt;</comment>
                            <comment id="11833" author="kjessup" created="Wed, 6 Sep 2017 18:24:10 -0400"  >&lt;p&gt;OK please try with Perfect-HTTPServer 2.3.4. This should be corrected now.&lt;/p&gt;</comment>
                            <comment id="11834" author="crarau" created="Wed, 6 Sep 2017 19:34:49 -0400"  >&lt;p&gt;Works better now:&lt;/p&gt;

&lt;p&gt;without the  &lt;br/&gt;
options.append(.addHeader(CURLRequest.Header.Name.custom(name: &quot;Expect:&quot;), &quot;&quot;))&lt;/p&gt;

&lt;p&gt;on the client 1.33 seconds&lt;br/&gt;
on the server 0.12 second&lt;/p&gt;

&lt;p&gt;with the expect header: &lt;br/&gt;
0.63 seconds (measured on the client)&lt;br/&gt;
0.11 seconds (measured on the server)&lt;/p&gt;

&lt;p&gt;Calling the same API from PHP using &lt;a href=&quot;https://github.com/guzzle/guzzle&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/guzzle/guzzle&lt;/a&gt;&lt;br/&gt;
we get this on the client: 0.099782943725586&lt;br/&gt;
on the server: 0.0957019329071045 seconds&lt;/p&gt;

&lt;p&gt;Where could the 0.5 difference come from?&lt;/p&gt;

&lt;p&gt;On my tests, both the client and the server are on a local server.&lt;/p&gt;</comment>
                            <comment id="11835" author="kjessup" created="Wed, 6 Sep 2017 20:03:18 -0400"  >&lt;p&gt;Was this after updating the server to 2.3.4? Wouldn&apos;t have any effect on the client - just wanted to confirm.&lt;/p&gt;</comment>
                            <comment id="11836" author="crarau" created="Wed, 6 Sep 2017 20:13:10 -0400"  >
&lt;p&gt;swift package show-dependencies&lt;br/&gt;
.&lt;br/&gt;
&#9500;&#9472;&#9472; PerfectHTTPServer&amp;lt;&lt;a href=&quot;https://github.com/PerfectlySoft/Perfect-HTTPServer.git@2.3.4&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/PerfectlySoft/Perfect-HTTPServer.git@2.3.4&lt;/a&gt;&amp;gt;&lt;br/&gt;
&#9474;   &#9500;&#9472;&#9472; PerfectNet&amp;lt;&lt;a href=&quot;https://github.com/PerfectlySoft/Perfect-Net.git@2.1.18&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/PerfectlySoft/Perfect-Net.git@2.1.18&lt;/a&gt;&amp;gt;&lt;br/&gt;
&#9474;   &#9474;   &#9500;&#9472;&#9472; PerfectCrypto&amp;lt;&lt;a href=&quot;https://github.com/PerfectlySoft/Perfect-Crypto.git@1.1.1&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/PerfectlySoft/Perfect-Crypto.git@1.1.1&lt;/a&gt;&amp;gt;&lt;br/&gt;
&#9474;   &#9474;   &#9474;   &#9500;&#9472;&#9472; PerfectLib&amp;lt;&lt;a href=&quot;https://github.com/PerfectlySoft/PerfectLib.git@2.0.11&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/PerfectlySoft/PerfectLib.git@2.0.11&lt;/a&gt;&amp;gt;&lt;br/&gt;
&#9474;   &#9474;   &#9474;   &#9500;&#9472;&#9472; PerfectThread&amp;lt;&lt;a href=&quot;https://github.com/PerfectlySoft/Perfect-Thread.git@2.0.12&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/PerfectlySoft/Perfect-Thread.git@2.0.12&lt;/a&gt;&amp;gt;&lt;br/&gt;
&#9474;   &#9474;   &#9474;   &#9492;&#9472;&#9472; COpenSSL&amp;lt;&lt;a href=&quot;https://github.com/PerfectlySoft/Perfect-COpenSSL.git@2.0.6&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/PerfectlySoft/Perfect-COpenSSL.git@2.0.6&lt;/a&gt;&amp;gt;&lt;br/&gt;
&#9474;   &#9474;   &#9492;&#9472;&#9472; PerfectThread&amp;lt;&lt;a href=&quot;https://github.com/PerfectlySoft/Perfect-Thread.git@2.0.12&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/PerfectlySoft/Perfect-Thread.git@2.0.12&lt;/a&gt;&amp;gt;&lt;br/&gt;
&#9474;   &#9492;&#9472;&#9472; PerfectHTTP&amp;lt;&lt;a href=&quot;https://github.com/PerfectlySoft/Perfect-HTTP.git@2.2.4&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/PerfectlySoft/Perfect-HTTP.git@2.2.4&lt;/a&gt;&amp;gt;&lt;br/&gt;
&#9474;       &#9500;&#9472;&#9472; PerfectLib&amp;lt;&lt;a href=&quot;https://github.com/PerfectlySoft/PerfectLib.git@2.0.11&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/PerfectlySoft/PerfectLib.git@2.0.11&lt;/a&gt;&amp;gt;&lt;br/&gt;
&#9474;       &#9492;&#9472;&#9472; PerfectNet&amp;lt;&lt;a href=&quot;https://github.com/PerfectlySoft/Perfect-Net.git@2.1.18&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/PerfectlySoft/Perfect-Net.git@2.1.18&lt;/a&gt;&amp;gt;&lt;br/&gt;
&#9474;           &#9500;&#9472;&#9472; PerfectCrypto&amp;lt;&lt;a href=&quot;https://github.com/PerfectlySoft/Perfect-Crypto.git@1.1.1&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/PerfectlySoft/Perfect-Crypto.git@1.1.1&lt;/a&gt;&amp;gt;&lt;br/&gt;
&#9474;           &#9474;   &#9500;&#9472;&#9472; PerfectLib&amp;lt;&lt;a href=&quot;https://github.com/PerfectlySoft/PerfectLib.git@2.0.11&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/PerfectlySoft/PerfectLib.git@2.0.11&lt;/a&gt;&amp;gt;&lt;br/&gt;
&#9474;           &#9474;   &#9500;&#9472;&#9472; PerfectThread&amp;lt;&lt;a href=&quot;https://github.com/PerfectlySoft/Perfect-Thread.git@2.0.12&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/PerfectlySoft/Perfect-Thread.git@2.0.12&lt;/a&gt;&amp;gt;&lt;br/&gt;
&#9474;           &#9474;   &#9492;&#9472;&#9472; COpenSSL&amp;lt;&lt;a href=&quot;https://github.com/PerfectlySoft/Perfect-COpenSSL.git@2.0.6&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/PerfectlySoft/Perfect-COpenSSL.git@2.0.6&lt;/a&gt;&amp;gt;&lt;br/&gt;
&#9474;           &#9492;&#9472;&#9472; PerfectThread&amp;lt;&lt;a href=&quot;https://github.com/PerfectlySoft/Perfect-Thread.git@2.0.12&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/PerfectlySoft/Perfect-Thread.git@2.0.12&lt;/a&gt;&amp;gt;&lt;br/&gt;
&#9500;&#9472;&#9472; PerfectCURL&amp;lt;&lt;a href=&quot;https://github.com/PerfectlySoft/Perfect-Curl@2.1.7&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/PerfectlySoft/Perfect-Curl@2.1.7&lt;/a&gt;&amp;gt;&lt;br/&gt;
&#9474;   &#9500;&#9472;&#9472; cURL&amp;lt;&lt;a href=&quot;https://github.com/PerfectlySoft/Perfect-libcurl.git@2.0.6&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/PerfectlySoft/Perfect-libcurl.git@2.0.6&lt;/a&gt;&amp;gt;&lt;br/&gt;
&#9474;   &#9492;&#9472;&#9472; PerfectHTTP&amp;lt;&lt;a href=&quot;https://github.com/PerfectlySoft/Perfect-HTTP.git@2.2.4&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/PerfectlySoft/Perfect-HTTP.git@2.2.4&lt;/a&gt;&amp;gt;&lt;br/&gt;
&#9474;       &#9500;&#9472;&#9472; PerfectLib&amp;lt;&lt;a href=&quot;https://github.com/PerfectlySoft/PerfectLib.git@2.0.11&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/PerfectlySoft/PerfectLib.git@2.0.11&lt;/a&gt;&amp;gt;&lt;br/&gt;
&#9474;       &#9492;&#9472;&#9472; PerfectNet&amp;lt;&lt;a href=&quot;https://github.com/PerfectlySoft/Perfect-Net.git@2.1.18&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/PerfectlySoft/Perfect-Net.git@2.1.18&lt;/a&gt;&amp;gt;&lt;br/&gt;
&#9474;           &#9500;&#9472;&#9472; PerfectCrypto&amp;lt;&lt;a href=&quot;https://github.com/PerfectlySoft/Perfect-Crypto.git@1.1.1&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/PerfectlySoft/Perfect-Crypto.git@1.1.1&lt;/a&gt;&amp;gt;&lt;br/&gt;
&#9474;           &#9474;   &#9500;&#9472;&#9472; PerfectLib&amp;lt;&lt;a href=&quot;https://github.com/PerfectlySoft/PerfectLib.git@2.0.11&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/PerfectlySoft/PerfectLib.git@2.0.11&lt;/a&gt;&amp;gt;&lt;br/&gt;
&#9474;           &#9474;   &#9500;&#9472;&#9472; PerfectThread&amp;lt;&lt;a href=&quot;https://github.com/PerfectlySoft/Perfect-Thread.git@2.0.12&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/PerfectlySoft/Perfect-Thread.git@2.0.12&lt;/a&gt;&amp;gt;&lt;br/&gt;
&#9474;           &#9474;   &#9492;&#9472;&#9472; COpenSSL&amp;lt;&lt;a href=&quot;https://github.com/PerfectlySoft/Perfect-COpenSSL.git@2.0.6&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/PerfectlySoft/Perfect-COpenSSL.git@2.0.6&lt;/a&gt;&amp;gt;&lt;br/&gt;
&#9474;           &#9492;&#9472;&#9472; PerfectThread&amp;lt;&lt;a href=&quot;https://github.com/PerfectlySoft/Perfect-Thread.git@2.0.12&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/PerfectlySoft/Perfect-Thread.git@2.0.12&lt;/a&gt;&amp;gt;&lt;br/&gt;
&#9500;&#9472;&#9472; SwiftMoment&amp;lt;&lt;a href=&quot;https://github.com/iamjono/SwiftMoment.git@0.9.1&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/iamjono/SwiftMoment.git@0.9.1&lt;/a&gt;&amp;gt;&lt;br/&gt;
&#9500;&#9472;&#9472; then&amp;lt;&lt;a href=&quot;https://github.com/freshOS/then.git@2.1.0&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/freshOS/then.git@2.1.0&lt;/a&gt;&amp;gt;&lt;br/&gt;
&#9500;&#9472;&#9472; Regex&amp;lt;&lt;a href=&quot;https://github.com/PerfectSideRepos/Perfect-RegEx.git@1.1.0&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/PerfectSideRepos/Perfect-RegEx.git@1.1.0&lt;/a&gt;&amp;gt;&lt;br/&gt;
&#9500;&#9472;&#9472; AlgoDTO&amp;lt;git@bitbucket.org:wisksolutions/wisk-common.git@0.0.16&amp;gt;&lt;br/&gt;
&#9474;   &#9500;&#9472;&#9472; SwiftyJSON&amp;lt;&lt;a href=&quot;https://github.com/IBM-Swift/SwiftyJSON.git@16.0.1&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/IBM-Swift/SwiftyJSON.git@16.0.1&lt;/a&gt;&amp;gt;&lt;br/&gt;
&#9474;   &#9492;&#9472;&#9472; SwiftMoment&amp;lt;&lt;a href=&quot;https://github.com/iamjono/SwiftMoment.git@0.9.1&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/iamjono/SwiftMoment.git@0.9.1&lt;/a&gt;&amp;gt;&lt;br/&gt;
&#9492;&#9472;&#9472; PerfectXML&amp;lt;&lt;a href=&quot;https://github.com/PerfectlySoft/Perfect-XML.git@2.0.5&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/PerfectlySoft/Perfect-XML.git@2.0.5&lt;/a&gt;&amp;gt;&lt;br/&gt;
    &#9492;&#9472;&#9472; libxml2&amp;lt;&lt;a href=&quot;https://github.com/PerfectlySoft/Perfect-libxml2.git@2.0.1&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/PerfectlySoft/Perfect-libxml2.git@2.0.1&lt;/a&gt;&amp;gt;&lt;/p&gt;</comment>
                            <comment id="11837" author="crarau" created="Wed, 6 Sep 2017 20:16:07 -0400"  >&lt;p&gt;Interesting that the PHP client is working super fast. They must be configuring CURL differently on the client&lt;/p&gt;</comment>
                            <comment id="11838" author="crarau" created="Mon, 11 Sep 2017 09:15:33 -0400"  >&lt;p&gt;We are using swift client/server in a micro services architecture. &lt;br/&gt;
In this use case the delay greatly impacts the user experience, even if the services respond in milliseconds.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10400" key="com.atlassian.servicedesk.approvals-plugin:sd-approvals">
                        <customfieldname>Approvals</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10100" key="com.atlassian.servicedesk:vp-origin">
                        <customfieldname>Customer Request Type</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10500" key="com.atlassian.servicedesk:sd-customer-organizations">
                        <customfieldname>Organizations</customfieldname>
                        <customfieldvalues>
                                
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10005" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0042n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10101" key="com.atlassian.servicedesk:sd-request-participants">
                        <customfieldname>Request participants</customfieldname>
                        <customfieldvalues>
                                
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_10104" key="com.atlassian.servicedesk:sd-sla-field">
                        <customfieldname>Time to resolution</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>