<!-- 
RSS generated by JIRA (7.3.0#73011-sha1:3c73d0e0b5ea20e2128531b9adf9b0585752b90a) at Tue Feb 06 20:47:57 UTC 2018

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
http://jira.perfect.org:8080/si/jira.issueviews:issue-xml/ISS-42/ISS-42.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>PerfectlySoft JIRA</title>
    <link>http://jira.perfect.org:8080</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>7.3.0</version>
        <build-number>73011</build-number>
        <build-date>03-01-2017</build-date>
    </build-info>

<item>
            <title>[ISS-42] support for web sockets and socket.io planned?</title>
                <link>http://jira.perfect.org:8080/browse/ISS-42</link>
                <project id="10007" key="ISS">Issues</project>
                    <description>&lt;p&gt;We use socket.io in our current Swift iOS app and would love to move from Node.js to perfect.  &lt;/p&gt;

&lt;p&gt;Please consider adding socket.io support into your plans.  A roadmap of features (and a place to vote for your favorite) would be a great addition to this project.&lt;/p&gt;</description>
                <environment></environment>
        <key id="10470">ISS-42</key>
            <summary>support for web sockets and socket.io planned?</summary>
                <type id="10104" iconUrl="http://jira.perfect.org:8080/secure/viewavatar?size=xsmall&amp;avatarId=10311&amp;avatarType=issuetype">New Feature</type>
                                                <status id="6" iconUrl="http://jira.perfect.org:8080/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="10000">Done</resolution>
                                        <assignee username="jono">Jonathan Guthrie</assignee>
                                    <reporter username="cwoloszynski">cwoloszynski</reporter>
                            <created>Sun, 6 Dec 2015 20:30:46 -0500</created>
                <updated>Wed, 27 Jul 2016 17:51:34 -0400</updated>
                            <resolved>Wed, 27 Jul 2016 17:51:34 -0400</resolved>
                                                                    <component>WebSockets</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="10300" author="tranhieutt" created="Sun, 6 Dec 2015 20:59:02 -0500"  >&lt;p&gt;goog idea.&lt;br/&gt;
I hope perfect&apos;ll develop soon.&lt;/p&gt;</comment>
                            <comment id="10301" author="seanstephens" created="Sun, 6 Dec 2015 21:08:55 -0500"  >&lt;p&gt;We do have a list of features (and unpublished functions). Any suggestions on a voting mechanism? (Please don&apos;t say Reddit - not that we don&apos;t love Reddit, but something more succinct and manageable would be nice).&lt;/p&gt;</comment>
                            <comment id="10302" author="cwoloszynski" created="Mon, 7 Dec 2015 07:00:51 -0500"  >&lt;p&gt;I have looked around a bit on the site and I don&apos;t see the list of planned features anywhere public.  Is it out there yet or are you still working on how to present it and get feedback from the community?&lt;/p&gt;

&lt;p&gt;I don&apos;t have a specific suggestion on the voting process.  I recently used one where each user account got a number of stars (10 initially) and then they could allocate 1..3 stars to any suggestion and they could also create new suggested changes.  I think that the site (I am having a moment where I cannot remember this site, ugh!) also periodically grants new stars to accounts to allow continued involvement in the process.  &lt;/p&gt;

&lt;p&gt;I&apos;ll see if I can find the site/voting mechanism they used.  &lt;/p&gt;

&lt;p&gt;Keep up the great work with this project and site!  Once there is a place for voting for features, I&apos;d like to add the following items to the list:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;socket.io support&lt;/li&gt;
	&lt;li&gt;URL routing support&lt;/li&gt;
	&lt;li&gt;policy rules for accessing various &apos;controllers&apos;&lt;/li&gt;
	&lt;li&gt;authentication support (AWT)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I am coming from Node.js/Sails and want to bring some of the best of that to Swift&lt;/p&gt;</comment>
                            <comment id="10303" author="cwoloszynski" created="Mon, 7 Dec 2015 07:09:20 -0500"  >&lt;p&gt;Ah, found it.  You might want to consider the tool used by good notes (&lt;a href=&quot;http://feedback.goodnotesapp.com/forums/191274-goodnotes-ideas&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://feedback.goodnotesapp.com/forums/191274-goodnotes-ideas&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;It is called UserVoice (&lt;a href=&quot;http://www.uservoice.com/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.uservoice.com/&lt;/a&gt;), specifically the SmartVote under Product Management.  Sadly, it is not cheap.  Perhaps they would be willing to offer some discount for GPL projects.  &lt;/p&gt;</comment>
                            <comment id="10304" author="nickskull" created="Tue, 8 Dec 2015 07:55:34 -0500"  >&lt;p&gt;Socket.io + URL routing would be awesome. :+1: &lt;/p&gt;</comment>
                            <comment id="10305" author="alexzielenski" created="Fri, 11 Dec 2015 14:59:56 -0500"  >&lt;p&gt;Is an express-like GET/POST/PUT/UPDATE/DELETE etc. HTTP request handling yet possible? As in &lt;/p&gt;

&lt;p&gt;    Perfect.get(&quot;/users&quot;, &lt;/p&gt;
{ (request, response) in ... return response.Status(.OK) })&lt;br/&gt;
    Perfect.get(&quot;/users&quot;, { (request, response) in ... return response.Status(.OK) }
&lt;p&gt;)&lt;br/&gt;
    Perfect.get(&quot;/users/&lt;/p&gt;
{id}
&lt;p&gt;&quot;, &lt;/p&gt;
{ (request, response) in ... return response.Status(.OK) })&lt;br/&gt;
    Perfect.post(&quot;/users&quot;, { (request, response) in ... return response.Status(.OK) }
&lt;p&gt;)&lt;br/&gt;
    ...&lt;br/&gt;
Possibly with support for middleware? I think that would really get the ball rolling.&lt;/p&gt;</comment>
                            <comment id="10306" author="narup" created="Tue, 5 Jan 2016 12:44:01 -0500"  >&lt;p&gt;I think it&apos;s better to have core websocket support in Perfect library, and have socket.io protocol implementation as a plugin or extension. That will open up Perfect for other websocket based subprotocol implementations&lt;/p&gt;</comment>
                            <comment id="10804" author="jono" created="Wed, 27 Jul 2016 17:50:45 -0400"  >&lt;p&gt;Yes, WebSockets is core Perfect functionality via the HTTP libs. &lt;br/&gt;
I will raise the socket.io protocol support as a feature request.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10400" key="com.atlassian.servicedesk.approvals-plugin:sd-approvals">
                        <customfieldname>Approvals</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10200" key="com.atlassian.jira.plugin.system.customfieldtypes:textfield">
                        <customfieldname>External issue ID</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>28</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10500" key="com.atlassian.servicedesk:sd-customer-organizations">
                        <customfieldname>Organizations</customfieldname>
                        <customfieldvalues>
                                
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10005" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i000lj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10101" key="com.atlassian.servicedesk:sd-request-participants">
                        <customfieldname>Request participants</customfieldname>
                        <customfieldvalues>
                                
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_10104" key="com.atlassian.servicedesk:sd-sla-field">
                        <customfieldname>Time to resolution</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>