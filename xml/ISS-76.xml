<!-- 
RSS generated by JIRA (7.3.0#73011-sha1:3c73d0e0b5ea20e2128531b9adf9b0585752b90a) at Tue Feb 06 20:48:14 UTC 2018

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
http://jira.perfect.org:8080/si/jira.issueviews:issue-xml/ISS-76/ISS-76.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>PerfectlySoft JIRA</title>
    <link>http://jira.perfect.org:8080</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>7.3.0</version>
        <build-number>73011</build-number>
        <build-date>03-01-2017</build-date>
    </build-info>

<item>
            <title>[ISS-76] Load/Reload .so without restart server?</title>
                <link>http://jira.perfect.org:8080/browse/ISS-76</link>
                <project id="10007" key="ISS">Issues</project>
                    <description>&lt;p&gt;It&apos;s an important feature for production environment.&lt;/p&gt;</description>
                <environment></environment>
        <key id="10504">ISS-76</key>
            <summary>Load/Reload .so without restart server?</summary>
                <type id="10104" iconUrl="http://jira.perfect.org:8080/secure/viewavatar?size=xsmall&amp;avatarId=10311&amp;avatarType=issuetype">New Feature</type>
                                                <status id="5" iconUrl="http://jira.perfect.org:8080/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="10001">Won&apos;t Do</resolution>
                                        <assignee username="kjessup">Kyle Jessup</assignee>
                                    <reporter username="SimpleFelix">Felix</reporter>
                            <created>Mon, 11 Jan 2016 23:14:18 -0500</created>
                <updated>Mon, 22 Jan 2018 10:38:23 -0500</updated>
                            <resolved>Mon, 22 Jan 2018 10:38:22 -0500</resolved>
                                                                    <component>Perfect Core Library</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="10383" author="sahin" created="Sat, 20 Feb 2016 22:56:07 -0500"  >&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="12020" author="rocky" created="Mon, 22 Jan 2018 10:38:23 -0500"  >&lt;p&gt;Hi &lt;a href=&quot;http://jira.perfect.org:8080/secure/ViewProfile.jspa?name=SimpleFelix&quot; class=&quot;user-hover&quot; rel=&quot;SimpleFelix&quot;&gt;Felix&lt;/a&gt; , you actually can load .so into a Perfect Server as described in my personal repo: cswift:&lt;/p&gt;


&lt;p&gt;&lt;a href=&quot;https://github.com/RockfordWei/CSwift&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/RockfordWei/CSwift&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-comment&quot;&gt;// First thing first, make sure your dll path is an dynamic library in an ABSOLUTE path.
&lt;/span&gt;&lt;span class=&quot;code-comment&quot;&gt;// on Mac, the suffix is &lt;span class=&quot;code-quote&quot;&gt;&quot;.dylib&quot;&lt;/span&gt;; on Linux, it is &lt;span class=&quot;code-quote&quot;&gt;&quot;.so&quot;&lt;/span&gt;
&lt;/span&gt;guard let lib = dlopen(dllpath,  RTLD_LAZY) &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
  exit(0)
}

&lt;span class=&quot;code-comment&quot;&gt;// declare the api prototype to call
&lt;/span&gt;typealias AddFunc = @convention(c) (CInt, CInt) -&amp;gt; CInt

&lt;span class=&quot;code-comment&quot;&gt;// look up the function in the library
&lt;/span&gt;guard let c_add = dlsym(lib, &lt;span class=&quot;code-quote&quot;&gt;&quot;c_add&quot;&lt;/span&gt;) &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
  dlclose(lib)
  exit(0)
}

&lt;span class=&quot;code-comment&quot;&gt;// attache the function to the real API address
&lt;/span&gt;let add = unsafeBitCast(c_add, to: AddFunc.self)

&lt;span class=&quot;code-comment&quot;&gt;// call the C method, dynamically
&lt;/span&gt;let x = add(1, 2)
print(x)

&lt;span class=&quot;code-comment&quot;&gt;// release resources
&lt;/span&gt;dlclose(lib)

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;However, it is the only way to load a dynamic library in a C formed API, and you can re-map it into a class instance. Since Swift is more like a static language, the &quot;import&quot; action only run once but there is no such a &quot;dismiss&quot; method.&lt;/p&gt;


&lt;p&gt;A very typical of such a usage can be found on&lt;/p&gt;


&lt;p&gt;&lt;a href=&quot;https://github.com/PerfectlySoft/Perfect-TensorFlow/blob/master/Sources/PerfectTensorFlow/APILoader.swift&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/PerfectlySoft/Perfect-TensorFlow/blob/master/Sources/PerfectTensorFlow/APILoader.swift&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;Perfect-TensorFlow is using dlopen&#160;and dlsym to attach tensorflow.so into memory and wrap it up with a dozen of class instances without losing any performance.&lt;/p&gt;



&lt;p&gt;Unfortunately, everything has pros and cons. The dynamic library method works good for module replacement but lost the strong type checking as expected in all swifts. Conventional static link is still the very suggested option.&lt;/p&gt;



&lt;p&gt;Thank you.&lt;/p&gt;



&lt;p&gt;Rocky.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10400" key="com.atlassian.servicedesk.approvals-plugin:sd-approvals">
                        <customfieldname>Approvals</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10200" key="com.atlassian.jira.plugin.system.customfieldtypes:textfield">
                        <customfieldname>External issue ID</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>63</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10500" key="com.atlassian.servicedesk:sd-customer-organizations">
                        <customfieldname>Organizations</customfieldname>
                        <customfieldvalues>
                                
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10005" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i000t3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10101" key="com.atlassian.servicedesk:sd-request-participants">
                        <customfieldname>Request participants</customfieldname>
                        <customfieldvalues>
                                
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_10104" key="com.atlassian.servicedesk:sd-sla-field">
                        <customfieldname>Time to resolution</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>