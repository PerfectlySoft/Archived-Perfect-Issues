<!-- 
RSS generated by JIRA (7.3.0#73011-sha1:3c73d0e0b5ea20e2128531b9adf9b0585752b90a) at Tue Feb 06 20:51:57 UTC 2018

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
http://jira.perfect.org:8080/si/jira.issueviews:issue-xml/ISS-546/ISS-546.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>PerfectlySoft JIRA</title>
    <link>http://jira.perfect.org:8080</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>7.3.0</version>
        <build-number>73011</build-number>
        <build-date>03-01-2017</build-date>
    </build-info>

<item>
            <title>[ISS-546] PG StORM (possibly other variants) - obtain an available id</title>
                <link>http://jira.perfect.org:8080/browse/ISS-546</link>
                <project id="10007" key="ISS">Issues</project>
                    <description>&lt;h1&gt;&lt;a name=&quot;Problem&quot;&gt;&lt;/a&gt;Problem&lt;/h1&gt;

&lt;p&gt;When inserting new rows&#160;then I&apos;m getting&#160;errors like this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-none&quot;&gt;
ERROR: duplicate key value violates unique constraint &quot;president_key&quot;
DETAIL: Key (id)=(45) already exists.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I&apos;m having gaps in my `id` column, eg: 1, 2, 3, 7, 8&lt;br/&gt;
Because I have imported a dataset with gaps in the `id` column.&lt;/p&gt;

&lt;p&gt;My code looks like &lt;a href=&quot;https://github.com/PerfectExamples/PostgreStORM-Demo/blob/master/Sources/Create.swift&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;the demo project&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-none&quot;&gt;
// delete database

// create new table
let obj = President()
try? obj.setup()

// insert rows
let president = President()
try president.save \{ id in president.id = id as! Int }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If I dump the postgresql database it looks like this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-none&quot;&gt;
CREATE TABLE president (
    id integer NOT NULL,
    name text
);
CREATE SEQUENCE president_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;




&lt;h1&gt;&lt;a name=&quot;SolutionA&quot;&gt;&lt;/a&gt;Solution A&lt;/h1&gt;

&lt;p&gt;This is guess work. I don&apos;t know what is best practice about this.&lt;/p&gt;

&lt;p&gt;A simple solution could be to pick the max value of the &lt;tt&gt;id&lt;/tt&gt; column and add 1.&lt;/p&gt;

&lt;p&gt;A more advanced solution could be to find the first available row in a gap or append to the end of the table.&lt;/p&gt;

&lt;p&gt;Maybe with a lock around the query, so it&apos;s atomic.&lt;/p&gt;


&lt;h1&gt;&lt;a name=&quot;SolutionB&quot;&gt;&lt;/a&gt;Solution B&lt;/h1&gt;

&lt;p&gt;I could change my data, so there are no gaps in the &lt;tt&gt;id&lt;/tt&gt; column.&lt;/p&gt;

&lt;p&gt;However this would cause problems if I delete a row, so that a gap is introduced.&lt;/p&gt;</description>
                <environment></environment>
        <key id="11408">ISS-546</key>
            <summary>PG StORM (possibly other variants) - obtain an available id</summary>
                <type id="10103" iconUrl="http://jira.perfect.org:8080/secure/viewavatar?size=xsmall&amp;avatarId=10310&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="1" iconUrl="http://jira.perfect.org:8080/images/icons/priorities/highest.svg">Highest</priority>
                        <status id="1" iconUrl="http://jira.perfect.org:8080/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="neoneye">Simon Strandgaard</reporter>
                            <created>Wed, 18 Oct 2017 19:31:04 -0400</created>
                <updated>Thu, 19 Oct 2017 15:22:03 -0400</updated>
                                                                            <component>Other</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="11916" author="neoneye" created="Wed, 18 Oct 2017 20:04:48 -0400"  >&lt;p&gt;I experimenting with a workaround like this.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-none&quot;&gt;try president.sql(&quot;SELECT setval(&apos;president_id_seq&apos;, (SELECT MAX(id) FROM president));&quot;, params: [])
try president.save { id in president.id = id as! Int }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="11917" author="neoneye" created="Thu, 19 Oct 2017 15:22:03 -0400"  >&lt;p&gt;I have made this into an extension&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-none&quot;&gt;import PostgresStORM
extension PostgresStORM {
	func pickNextId() throws {
		let table = self.table()
		let statement = &quot;SELECT setval(&apos;\(table)_id_seq&apos;, (SELECT MAX(id) FROM \(table)))&quot;
		try self.sql(statement, params: [])
	}
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;h1&gt;&lt;a name=&quot;Usage&quot;&gt;&lt;/a&gt;Usage&lt;/h1&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-none&quot;&gt;try president.pickNextId()
try president.save { id in president.id = id as! Int }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10400" key="com.atlassian.servicedesk.approvals-plugin:sd-approvals">
                        <customfieldname>Approvals</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10500" key="com.atlassian.servicedesk:sd-customer-organizations">
                        <customfieldname>Organizations</customfieldname>
                        <customfieldvalues>
                                
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10005" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i00473:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10101" key="com.atlassian.servicedesk:sd-request-participants">
                        <customfieldname>Request participants</customfieldname>
                        <customfieldvalues>
                                
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_10104" key="com.atlassian.servicedesk:sd-sla-field">
                        <customfieldname>Time to resolution</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>