<!-- 
RSS generated by JIRA (7.3.0#73011-sha1:3c73d0e0b5ea20e2128531b9adf9b0585752b90a) at Tue Feb 06 20:49:03 UTC 2018

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
http://jira.perfect.org:8080/si/jira.issueviews:issue-xml/ISS-175/ISS-175.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>PerfectlySoft JIRA</title>
    <link>http://jira.perfect.org:8080</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>7.3.0</version>
        <build-number>73011</build-number>
        <build-date>03-01-2017</build-date>
    </build-info>

<item>
            <title>[ISS-175] Tutorial for contest: Swift, Perfect, mustache and PostgreSQL on Heroku</title>
                <link>http://jira.perfect.org:8080/browse/ISS-175</link>
                <project id="10007" key="ISS">Issues</project>
                    <description>&lt;p&gt;As every iOS developer, sometimes I feel that for a new app I&#8217;d better have a back-end: some simple server that will store data and pass it to client on iOS in some specific shape. Since Swift became open source, laziness no longer has excuse.&lt;br/&gt;
In this series of tutorials back-end for imagnery iOS app is created. It is deployed to cloud, stores data in PostgreSQL database and responds with JSON with this data. Structure of responses is defined by mustache templates.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@abjurato/swift-perfect-mustache-and-postgresql-on-heroku-48d483fe8489#.pdymfrnvd&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;Chapter 1&lt;/a&gt; &#8212; make Perfect respond with mustache&lt;br/&gt;
&lt;a href=&quot;https://medium.com/@abjurato/swift-perfect-mustache-and-postgresql-on-heroku-2-415bd1a0e930#.kp992nz1e&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;Chapter 2&lt;/a&gt; &#8212; connect PostgreSQL database, respond with data stored in db&lt;br/&gt;
&lt;a href=&quot;https://medium.com/@abjurato/swift-perfect-mustache-and-postgresql-on-heroku-3-e5c1f0982e0b#.enqfnz1w3&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;Chapter 3&lt;/a&gt; &#8212; deploy to Heroku&lt;br/&gt;
&lt;a href=&quot;https://medium.com/@abjurato/swift-perfect-mustache-and-postgresql-on-heroku-4-9f4ea43c9529#.1paqd9u6g&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;Chapter 4&lt;/a&gt; &#8212; the final one, make PostgreSQL work on Heroku&lt;/p&gt;

&lt;p&gt;Code on github for all chapters: &lt;a href=&quot;https://github.com/abjurato/CatFoodServer&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;CatFoodServer&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you&apos;ve noticed any mistake, please let me know, in order to prevent somebody from breaking his keyboard like I did investigating mysterious web development universe ��&lt;/p&gt;</description>
                <environment></environment>
        <key id="10603">ISS-175</key>
            <summary>Tutorial for contest: Swift, Perfect, mustache and PostgreSQL on Heroku</summary>
                <type id="10109" iconUrl="http://jira.perfect.org:8080/secure/viewavatar?size=xsmall&amp;avatarId=10304&amp;avatarType=issuetype">Support Request</type>
                                                <status id="6" iconUrl="http://jira.perfect.org:8080/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="abjurato">Anatoly Rosencrantz</reporter>
                            <created>Mon, 2 May 2016 04:30:02 -0400</created>
                <updated>Thu, 12 May 2016 05:15:20 -0400</updated>
                                                                                <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="10605" author="whatisinternet" created="Tue, 3 May 2016 13:30:07 -0400"  >&lt;p&gt;&lt;a href=&quot;http://jira.perfect.org:8080/secure/ViewProfile.jspa?name=abjurato&quot; class=&quot;user-hover&quot; rel=&quot;abjurato&quot;&gt;Anatoly Rosencrantz&lt;/a&gt; Thanks for the tutorial! I found one small issue In chapter 1 the mustache template specifies quotes around the responder name. The quotes will cause an error that could be difficult to debug. The code in the sample repo is correct.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;image-wrap&quot; style=&quot;&quot;&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/2000/1*kbGgKWpWvAhAbLMcMPvHng.png&quot; style=&quot;border: 0px solid black&quot; /&gt;&lt;/span&gt;&lt;br/&gt;
&lt;a href=&quot;https://github.com/abjurato/CatFoodServer/blob/step_1.2_build_simple_service/CatFoodServer/Mustache/CatName.mustache&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;Correct code from your example&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="10606" author="abjurato" created="Tue, 3 May 2016 16:08:46 -0400"  >&lt;p&gt;&lt;a href=&quot;http://jira.perfect.org:8080/secure/ViewProfile.jspa?name=whatisinternet&quot; class=&quot;user-hover&quot; rel=&quot;whatisinternet&quot;&gt;Josh Teeter&lt;/a&gt; oh, my bad, sorry. Fixed, and thanks a lot!&lt;/p&gt;</comment>
                            <comment id="10607" author="shaneqi" created="Thu, 5 May 2016 01:21:35 -0400"  >&lt;p&gt;Thank you for the tutorial, appreciate it!&lt;/p&gt;

&lt;p&gt;In my understanding, you are using mustache to respond json.&lt;/p&gt;

&lt;p&gt;Have you tried encode dictionary to json string and then respond the json string directly?&lt;/p&gt;

&lt;p&gt;Because when I tried to encode and respond, I encounter some obstacles.&lt;/p&gt;</comment>
                            <comment id="10608" author="abjurato" created="Thu, 5 May 2016 02:22:32 -0400"  >&lt;p&gt;@qizt I&apos;ve decided that for my purposes mustache will be more comfortable, but using JSONEncoder should not behave with Perfect in any specific way&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10400" key="com.atlassian.servicedesk.approvals-plugin:sd-approvals">
                        <customfieldname>Approvals</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10200" key="com.atlassian.jira.plugin.system.customfieldtypes:textfield">
                        <customfieldname>External issue ID</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>162</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10500" key="com.atlassian.servicedesk:sd-customer-organizations">
                        <customfieldname>Organizations</customfieldname>
                        <customfieldvalues>
                                
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10005" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i001f3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10101" key="com.atlassian.servicedesk:sd-request-participants">
                        <customfieldname>Request participants</customfieldname>
                        <customfieldvalues>
                                
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_10104" key="com.atlassian.servicedesk:sd-sla-field">
                        <customfieldname>Time to resolution</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>