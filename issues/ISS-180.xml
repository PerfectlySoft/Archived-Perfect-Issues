<!-- 
RSS generated by JIRA (7.3.0#73011-sha1:3c73d0e0b5ea20e2128531b9adf9b0585752b90a) at Tue Feb 06 20:49:04 UTC 2018

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
http://jira.perfect.org:8080/si/jira.issueviews:issue-xml/ISS-180/ISS-180.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>PerfectlySoft JIRA</title>
    <link>http://jira.perfect.org:8080</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>7.3.0</version>
        <build-number>73011</build-number>
        <build-date>03-01-2017</build-date>
    </build-info>

<item>
            <title>[ISS-180] Refactoring: responder chain</title>
                <link>http://jira.perfect.org:8080/browse/ISS-180</link>
                <project id="10007" key="ISS">Issues</project>
                    <description>&lt;p&gt;Refactoring proposal to add responder chain concept. After all this &quot;swifty&quot; discussions, I noticed there are several really weak places in a perfect codebase, and responder chain, lack of it actually, is main of them. The reason why responder chain is necessary &#8212; it opens a way to building middleware modules. That is very important in modern frameworks.&lt;/p&gt;

&lt;p&gt;These my initial ideas how it could be implemented.&lt;/p&gt;

&lt;p&gt;This PR is not yet ready to merge: rather, call for discussion. Let me know what you guys think!&lt;/p&gt;</description>
                <environment></environment>
        <key id="10608">ISS-180</key>
            <summary>Refactoring: responder chain</summary>
                <type id="10103" iconUrl="http://jira.perfect.org:8080/secure/viewavatar?size=xsmall&amp;avatarId=10310&amp;avatarType=issuetype">Improvement</type>
                                                <status id="1" iconUrl="http://jira.perfect.org:8080/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="gavrix">Sergey Gavrilyuk</reporter>
                            <created>Fri, 6 May 2016 15:23:43 -0400</created>
                <updated>Wed, 27 Jul 2016 17:54:30 -0400</updated>
                                                                            <component>HTTP Suite</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="10640" author="claassistant" created="Fri, 6 May 2016 15:23:44 -0400"  >&lt;p&gt;[!&lt;a href=&quot;https://cla-assistant.io/pull/badge/signed&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;CLA assistant check&lt;/a&gt;](&lt;a href=&quot;https://cla-assistant.io/PerfectlySoft/Perfect?pullRequest=167&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://cla-assistant.io/PerfectlySoft/Perfect?pullRequest=167&lt;/a&gt;) &amp;lt;br/&amp;gt;All committers have signed the CLA.&lt;/p&gt;</comment>
                            <comment id="10641" author="danappelxx" created="Fri, 6 May 2016 19:08:48 -0400"  >&lt;p&gt;Nice to see this! Middleware is definitely very important. I just wanted to hop in and say that a lot of this functionality could be taken from &lt;a href=&quot;https://github.com/open-swift/S4&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;open-swift&lt;/a&gt; such as middleware, responders, response, body, etc. Great work getting this started!&lt;/p&gt;</comment>
                            <comment id="10642" author="gavrix" created="Sun, 8 May 2016 17:25:50 -0400"  >&lt;p&gt;&lt;a href=&quot;http://jira.perfect.org:8080/secure/ViewProfile.jspa?name=Danappelxx&quot; class=&quot;user-hover&quot; rel=&quot;Danappelxx&quot;&gt;Dan Appel&lt;/a&gt; yeah, I know that discussion. Some stuff like &lt;tt&gt;Response&lt;/tt&gt; and &lt;tt&gt;Request&lt;/tt&gt; and &lt;tt&gt;Stream&lt;/tt&gt; indeed better be taken from open-swift, there is no so much to differ in possible implementations. The main issue though is that swift package manager is still in early dev state and is only available as part of swift 3 dev snapshots. That means &lt;br/&gt;
1. not compatible with swift2.2&lt;br/&gt;
2. unstable within swift3 branch&lt;/p&gt;

&lt;p&gt;Some stuff that I proposed like Responder chain implementation, is different than the one in open-swift, and frankly, I don&apos;t think Responder chain should be unified at all in open-swift. &lt;/p&gt;

&lt;p&gt;In future when we get stable swift package manager, there is of course only one way to go. With swift2.2  I guess Perfect core maintainers need to pick the best strategy: &lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;either use it&apos;s own implementation of &lt;tt&gt;Request&lt;/tt&gt;, &lt;tt&gt;Response&lt;/tt&gt; etc. but API-compatible with open-swift,&lt;/li&gt;
	&lt;li&gt;or integrate part from the code from open-swift using some custom bootstrapping process.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="10643" author="kjessup" created="Mon, 16 May 2016 10:22:53 -0400"  >&lt;p&gt;Thank you for this. My initial comment is that it appears to enforce a synchronous response. This would remove the flexibility to make asynchronous calls from within the handler. The simplest way to fix this would be to, instead of returning a Response from the handler, deliver the response to the .requestCompleted() callback (or something similar).&lt;/p&gt;

&lt;p&gt;Have you done any benchmarks to see what sort of overhead this implementation introduces or improves compared to the current impl. in master?&lt;/p&gt;</comment>
                            <comment id="10644" author="gavrix" created="Thu, 19 May 2016 19:01:43 -0400"  >&lt;p&gt;Responder model I offered actually is asynchronous, through &lt;tt&gt;Stream&lt;/tt&gt; type body of the response.&lt;br/&gt;
Also, I reimplemented Routing (based on Trie) as a &lt;tt&gt;Responder&lt;/tt&gt;, and it can detect conflicting routes.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10400" key="com.atlassian.servicedesk.approvals-plugin:sd-approvals">
                        <customfieldname>Approvals</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10200" key="com.atlassian.jira.plugin.system.customfieldtypes:textfield">
                        <customfieldname>External issue ID</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>167</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10500" key="com.atlassian.servicedesk:sd-customer-organizations">
                        <customfieldname>Organizations</customfieldname>
                        <customfieldvalues>
                                
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10005" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i001g7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10101" key="com.atlassian.servicedesk:sd-request-participants">
                        <customfieldname>Request participants</customfieldname>
                        <customfieldvalues>
                                
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_10104" key="com.atlassian.servicedesk:sd-sla-field">
                        <customfieldname>Time to resolution</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>