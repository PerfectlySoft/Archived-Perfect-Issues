<!-- 
RSS generated by JIRA (7.3.0#73011-sha1:3c73d0e0b5ea20e2128531b9adf9b0585752b90a) at Tue Feb 06 20:49:07 UTC 2018

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
http://jira.perfect.org:8080/si/jira.issueviews:issue-xml/ISS-186/ISS-186.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>PerfectlySoft JIRA</title>
    <link>http://jira.perfect.org:8080</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>7.3.0</version>
        <build-number>73011</build-number>
        <build-date>03-01-2017</build-date>
    </build-info>

<item>
            <title>[ISS-186] Handling high&amp;low surrogate pairs.</title>
                <link>http://jira.perfect.org:8080/browse/ISS-186</link>
                <project id="10007" key="ISS">Issues</project>
                    <description>&lt;p&gt;&lt;b&gt;Short version of the problem: JSONDecoder/JSONConvertible is not able to decode surrogate pairs.&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Long version:&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;I was building a Telegram bot service with Perfect these days. It generally works like, when you send a message to the bot, the message will be encoded by Telegram server as json, sending to my Perfect bot server. My Perfect bot server will decode it and make different response according to the incoming messages.&lt;/p&gt;

&lt;p&gt;Telegram server encodes unusual characters, like Chinese chars and emoji chars, to unicodes in json. Some chars are fine, but some chars are not. Because those chars are encoded to two unicodes (high and low surrogates).&lt;/p&gt;

&lt;p&gt;For example, by Telegram server, &quot;��&quot; is encoded as &lt;tt&gt;\ud83d\ude33&lt;/tt&gt;. Telegram server did nothing wrong. UTF16 is not enough for every char, so that some chars like &quot;��&quot; is pointed by a UTF16 code pair: &lt;tt&gt;d83d&lt;/tt&gt; and &lt;tt&gt;de33&lt;/tt&gt;. The first unicode is high surrogate and the second is low surrogate. &lt;b&gt;They are both 16bit hex and can be calculate to one single uint32 value. Only after being calculated to one uint32 value it can be converted to a UnicodeScalar.&lt;/b&gt; And Perfect just ignore the surrogate pairs, so when encounters surrogates, Perfect gives out: &lt;tt&gt;fatal error: high- and low-surrogate code points are not valid Unicode scalar values&lt;/tt&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/UTF-16#Description&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;Here is a reference about surrogates&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is a test case, for either reproducing the high- and low-surrogate error, or testing my pull request code.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unable to find source-code formatter for language: swift.&lt;/span&gt; Available languages are: actionscript, html, java, javascript, none, sql, xhtml, xml&lt;/div&gt;&lt;pre&gt;
	func testJSONDecodeUnicode() {
		
		&lt;span class=&quot;code-keyword&quot;&gt;var&lt;/span&gt; decoded: [&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;: Any]?
		
		let jsonStr = &lt;span class=&quot;code-quote&quot;&gt;&quot;{\&quot;&lt;/span&gt;emoji\&lt;span class=&quot;code-quote&quot;&gt;&quot;: \&quot;&lt;/span&gt;\\ud83d\\ude33\&lt;span class=&quot;code-quote&quot;&gt;&quot;}&quot;&lt;/span&gt;		&lt;span class=&quot;code-comment&quot;&gt;// {&lt;span class=&quot;code-quote&quot;&gt;&quot;emoji&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;\ud83d\ude33&quot;&lt;/span&gt;}
&lt;/span&gt;		
		&lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; {
			
			decoded = &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; jsonStr.jsonDecode() as? [&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;: Any]
			
		} &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; let e {
			
			XCTAssert(&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;Exception &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; decoding JSON \(e)&quot;&lt;/span&gt;)
			&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;
			
		}
		
		XCTAssert(decoded != nil)
		
		let value = decoded![&lt;span class=&quot;code-quote&quot;&gt;&quot;emoji&quot;&lt;/span&gt;]
		
		XCTAssert(value != nil)
		
		let emojiStr = decoded![&lt;span class=&quot;code-quote&quot;&gt;&quot;emoji&quot;&lt;/span&gt;] as! &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;
		
		XCTAssert(emojiStr == &lt;span class=&quot;code-quote&quot;&gt;&quot;��&quot;&lt;/span&gt;)
		
	}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
        <key id="10614">ISS-186</key>
            <summary>Handling high&amp;low surrogate pairs.</summary>
                <type id="10109" iconUrl="http://jira.perfect.org:8080/secure/viewavatar?size=xsmall&amp;avatarId=10304&amp;avatarType=issuetype">Support Request</type>
                                                <status id="6" iconUrl="http://jira.perfect.org:8080/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="ShaneQi">Shane Qi</reporter>
                            <created>Sat, 14 May 2016 18:31:22 -0400</created>
                <updated>Mon, 16 May 2016 09:59:30 -0400</updated>
                                                                                <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="10657" author="claassistant" created="Sat, 14 May 2016 18:31:24 -0400"  >&lt;p&gt;[!&lt;a href=&quot;https://cla-assistant.io/pull/badge/signed&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;CLA assistant check&lt;/a&gt;](&lt;a href=&quot;https://cla-assistant.io/PerfectlySoft/Perfect?pullRequest=173&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://cla-assistant.io/PerfectlySoft/Perfect?pullRequest=173&lt;/a&gt;) &amp;lt;br/&amp;gt;All committers have signed the CLA.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10400" key="com.atlassian.servicedesk.approvals-plugin:sd-approvals">
                        <customfieldname>Approvals</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10200" key="com.atlassian.jira.plugin.system.customfieldtypes:textfield">
                        <customfieldname>External issue ID</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>173</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10500" key="com.atlassian.servicedesk:sd-customer-organizations">
                        <customfieldname>Organizations</customfieldname>
                        <customfieldvalues>
                                
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10005" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i001hj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10101" key="com.atlassian.servicedesk:sd-request-participants">
                        <customfieldname>Request participants</customfieldname>
                        <customfieldvalues>
                                
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_10104" key="com.atlassian.servicedesk:sd-sla-field">
                        <customfieldname>Time to resolution</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>