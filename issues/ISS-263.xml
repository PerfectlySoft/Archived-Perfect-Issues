<!-- 
RSS generated by JIRA (7.3.0#73011-sha1:3c73d0e0b5ea20e2128531b9adf9b0585752b90a) at Tue Feb 06 20:49:46 UTC 2018

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
http://jira.perfect.org:8080/si/jira.issueviews:issue-xml/ISS-263/ISS-263.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>PerfectlySoft JIRA</title>
    <link>http://jira.perfect.org:8080</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>7.3.0</version>
        <build-number>73011</build-number>
        <build-date>03-01-2017</build-date>
    </build-info>

<item>
            <title>[ISS-263] How to Execute Store Procedures on MySQL5</title>
                <link>http://jira.perfect.org:8080/browse/ISS-263</link>
                <project id="10007" key="ISS">Issues</project>
                    <description>&lt;p&gt;Hello,&lt;/p&gt;

&lt;p&gt;Is it possible to execute store procedures from MySQL?&lt;/p&gt;

&lt;p&gt;I can execute queries with:&lt;br/&gt;
let query = mysql.query(statement: &quot;SELECT * FROM table&quot;)&lt;/p&gt;

&lt;p&gt;But I have few Store Procedures that do not work with the query method.&lt;/p&gt;</description>
                <environment></environment>
        <key id="10718">ISS-263</key>
            <summary>How to Execute Store Procedures on MySQL5</summary>
                <type id="10109" iconUrl="http://jira.perfect.org:8080/secure/viewavatar?size=xsmall&amp;avatarId=10304&amp;avatarType=issuetype">Support Request</type>
                                            <priority id="3" iconUrl="http://jira.perfect.org:8080/images/icons/priorities/medium.svg">Medium</priority>
                        <status id="6" iconUrl="http://jira.perfect.org:8080/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="10001">Won&apos;t Do</resolution>
                                        <assignee username="rocky">Rockford Wei</assignee>
                                    <reporter username="erickva">Erick Vavretchek</reporter>
                            <created>Thu, 8 Sep 2016 09:32:42 -0400</created>
                <updated>Wed, 5 Apr 2017 09:22:30 -0400</updated>
                            <resolved>Wed, 5 Apr 2017 09:22:30 -0400</resolved>
                                                                    <component>MySQL Connector</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="11076" author="rocky" created="Fri, 28 Oct 2016 11:22:53 -0400"  >&lt;p&gt;Hi Erick Vavretchek,&lt;/p&gt;

&lt;p&gt;Could you please provide more details about it?&lt;/p&gt;

&lt;p&gt;I&apos;ve tried to test the store procedure on MariaDB and I believe that the same thing should work fine on MySQL. &lt;/p&gt;

&lt;p&gt;&lt;tt&gt;func testProcedure() {&lt;/tt&gt;&lt;br/&gt;
&lt;tt&gt;XCTAssert(mysql.query(statement: &quot;DROP PROCEDURE IF EXISTS procTest&quot;))&lt;/tt&gt;&lt;br/&gt;
&lt;tt&gt;var qres = mysql.query(statement: &quot;CREATE PROCEDURE procTest (IN x INT) BEGIN SELECT * FROM int_test WHERE a = x; END&quot;)&lt;/tt&gt;&lt;br/&gt;
&lt;tt&gt;XCTAssert(qres == true, mysql.errorMessage())&lt;/tt&gt;&lt;br/&gt;
&lt;tt&gt;qres =  mysql.query(statement: &quot;CALL procTest(-128)&quot;)&lt;/tt&gt;&lt;br/&gt;
&lt;tt&gt;XCTAssert(qres == true, mysql.errorMessage())&lt;/tt&gt;&lt;br/&gt;
&lt;tt&gt;let results = mysql.storeResults()&lt;/tt&gt;&lt;br/&gt;
&lt;tt&gt;if let results = results {&lt;/tt&gt;&lt;br/&gt;
{{defer &lt;/p&gt;
{ results.close()}
&lt;p&gt;}}&lt;br/&gt;
&lt;tt&gt;while let row = results.next() {&lt;/tt&gt;&lt;br/&gt;
&lt;tt&gt;XCTAssertEqual(row&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;, &quot;-128&quot;)&lt;/tt&gt;&lt;br/&gt;
&lt;tt&gt;}&lt;/tt&gt;&lt;br/&gt;
&lt;tt&gt;}&lt;/tt&gt;&lt;br/&gt;
&lt;tt&gt;}&lt;/tt&gt;&lt;/p&gt;


&lt;p&gt;Please check the Perfect MariaDB / MySQL connector repos for more information.&lt;br/&gt;
&#8211; Rockford Wei&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10400" key="com.atlassian.servicedesk.approvals-plugin:sd-approvals">
                        <customfieldname>Approvals</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10500" key="com.atlassian.servicedesk:sd-customer-organizations">
                        <customfieldname>Organizations</customfieldname>
                        <customfieldvalues>
                                
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10005" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i001zb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10101" key="com.atlassian.servicedesk:sd-request-participants">
                        <customfieldname>Request participants</customfieldname>
                        <customfieldvalues>
                                
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_10104" key="com.atlassian.servicedesk:sd-sla-field">
                        <customfieldname>Time to resolution</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>