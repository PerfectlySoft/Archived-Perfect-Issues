<!-- 
RSS generated by JIRA (7.3.0#73011-sha1:3c73d0e0b5ea20e2128531b9adf9b0585752b90a) at Tue Feb 06 20:50:55 UTC 2018

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
http://jira.perfect.org:8080/si/jira.issueviews:issue-xml/ISS-417/ISS-417.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>PerfectlySoft JIRA</title>
    <link>http://jira.perfect.org:8080</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>7.3.0</version>
        <build-number>73011</build-number>
        <build-date>03-01-2017</build-date>
    </build-info>

<item>
            <title>[ISS-417] Can&apos;t check a result of MongoCollection.insert function</title>
                <link>http://jira.perfect.org:8080/browse/ISS-417</link>
                <project id="10007" key="ISS">Issues</project>
                    <description></description>
                <environment></environment>
        <key id="11034">ISS-417</key>
            <summary>Can&apos;t check a result of MongoCollection.insert function</summary>
                <type id="10102" iconUrl="http://jira.perfect.org:8080/secure/viewavatar?size=xsmall&amp;avatarId=10303&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="http://jira.perfect.org:8080/images/icons/priorities/medium.svg">Medium</priority>
                        <status id="6" iconUrl="http://jira.perfect.org:8080/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="10100">Rejected</resolution>
                                        <assignee username="rocky">Rockford Wei</assignee>
                                    <reporter username="alexander@perechcnev.com">Alexander Perechnev</reporter>
                            <created>Thu, 2 Mar 2017 06:47:32 -0500</created>
                <updated>Thu, 2 Mar 2017 10:35:51 -0500</updated>
                            <resolved>Thu, 2 Mar 2017 10:35:51 -0500</resolved>
                                                                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="11455" author="alexander@perechcnev.com" created="Thu, 2 Mar 2017 06:49:11 -0500"  >&lt;p&gt;I have the following code:&lt;/p&gt;

&lt;p&gt;```&lt;br/&gt;
let collection = self.db.getCollection(name: self.kUserCollectionName)!&lt;/p&gt;

&lt;p&gt;        defer &lt;/p&gt;
{
            collection.close()
        }

&lt;p&gt;        let dict: &lt;span class=&quot;error&quot;&gt;&amp;#91;String:Any&amp;#93;&lt;/span&gt; = [&lt;br/&gt;
            &quot;login&quot;: login,&lt;br/&gt;
            &quot;password&quot;: password&lt;br/&gt;
        ]&lt;br/&gt;
        let string = try! dict.jsonEncodedString()&lt;br/&gt;
        let bson = try! BSON(json: string)&lt;/p&gt;

&lt;p&gt;        if collection.insert(document: bson) != MongoResult.success &lt;/p&gt;
{
            return nil
        }
&lt;p&gt;```&lt;/p&gt;

&lt;p&gt;But on the line `collection.insert(document: bson) != MongoResult.success` I&apos;m getting message `Binary operator != cannot be applied to two MongoCollection.Result operands`.&lt;/p&gt;</comment>
                            <comment id="11456" author="rocky" created="Thu, 2 Mar 2017 10:35:30 -0500"  >&lt;p&gt;Hi Alexander, Thanks for trying Perfect! &lt;br/&gt;
According to Swift Language Reference, logic comparison operators such as `==` and `!=` work only for &quot;simple enum&quot;, take example:&lt;/p&gt;


&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;enum&lt;/span&gt; Result {
  &lt;span class=&quot;code-keyword&quot;&gt;case&lt;/span&gt; success, failure
}

let r = Result.failure
&lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; works
&lt;/span&gt;print (r == .success)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;However, enum with extra parameters will be illegal:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;enum&lt;/span&gt; Result {
  &lt;span class=&quot;code-keyword&quot;&gt;case&lt;/span&gt; success, failure, fault(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;)
}

let r = Result.failure
&lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; won&apos;t work
&lt;/span&gt;print (r == .success)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Considering the MongoResult is in such a form:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;enum&lt;/span&gt; MongoResult {
 &lt;span class=&quot;code-keyword&quot;&gt;case&lt;/span&gt; success
 &lt;span class=&quot;code-keyword&quot;&gt;case&lt;/span&gt; error(UInt32, UInt32, &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;)
&#8230;	
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;So the proper calling of check MongoResult should be like this:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;                let result = collection.insert(document: bson)
		&lt;span class=&quot;code-keyword&quot;&gt;switch&lt;/span&gt; result2 {
		&lt;span class=&quot;code-keyword&quot;&gt;case&lt;/span&gt; .success:
			&lt;span class=&quot;code-comment&quot;&gt;// insert ok
&lt;/span&gt;		&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;:
			&lt;span class=&quot;code-comment&quot;&gt;// insert failure
&lt;/span&gt;		}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;p&gt;If you have any Swift language questions, please join our Slack channel &lt;a href=&quot;http://perfect.ly&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://perfect.ly&lt;/a&gt; and there is a channel called &apos;learning-swift`, everyone is learning all the time!&lt;/p&gt;

&lt;p&gt;Good Luck&lt;br/&gt;
Rocky.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10400" key="com.atlassian.servicedesk.approvals-plugin:sd-approvals">
                        <customfieldname>Approvals</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10100" key="com.atlassian.servicedesk:vp-origin">
                        <customfieldname>Customer Request Type</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10500" key="com.atlassian.servicedesk:sd-customer-organizations">
                        <customfieldname>Organizations</customfieldname>
                        <customfieldvalues>
                                
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10005" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i003dz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10101" key="com.atlassian.servicedesk:sd-request-participants">
                        <customfieldname>Request participants</customfieldname>
                        <customfieldvalues>
                                
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_10104" key="com.atlassian.servicedesk:sd-sla-field">
                        <customfieldname>Time to resolution</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>