<!-- 
RSS generated by JIRA (7.3.0#73011-sha1:3c73d0e0b5ea20e2128531b9adf9b0585752b90a) at Tue Feb 06 20:47:54 UTC 2018

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
http://jira.perfect.org:8080/si/jira.issueviews:issue-xml/ISS-38/ISS-38.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>PerfectlySoft JIRA</title>
    <link>http://jira.perfect.org:8080</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>7.3.0</version>
        <build-number>73011</build-number>
        <build-date>03-01-2017</build-date>
    </build-info>

<item>
            <title>[ISS-38] Send data with POST / GET request</title>
                <link>http://jira.perfect.org:8080/browse/ISS-38</link>
                <project id="10007" key="ISS">Issues</project>
                    <description>&lt;p&gt;Hi,&lt;br/&gt;
First, thank you so much for your awesome framework.&lt;br/&gt;
Please help to explain how could i send data with POST / GET request from client and how to receive those params on server via Swift code ?&lt;br/&gt;
Many thanks for your help.&lt;/p&gt;</description>
                <environment></environment>
        <key id="10466">ISS-38</key>
            <summary>Send data with POST / GET request</summary>
                <type id="10109" iconUrl="http://jira.perfect.org:8080/secure/viewavatar?size=xsmall&amp;avatarId=10304&amp;avatarType=issuetype">Support Request</type>
                                                <status id="6" iconUrl="http://jira.perfect.org:8080/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="tuyenbq">Viva</reporter>
                            <created>Mon, 30 Nov 2015 07:49:02 -0500</created>
                <updated>Tue, 21 Jun 2016 17:37:02 -0400</updated>
                                                                                <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="10258" author="ankish" created="Mon, 30 Nov 2015 08:14:21 -0500"  >&lt;p&gt;Its clear in the code. Please check - Client / Server project.&lt;/p&gt;</comment>
                            <comment id="10259" author="tuyenbq" created="Thu, 3 Dec 2015 00:17:33 -0500"  >&lt;p&gt;oh yes, i got it. Tks!&lt;/p&gt;</comment>
                            <comment id="10260" author="tranhieutt" created="Thu, 3 Dec 2015 00:38:54 -0500"  >&lt;p&gt;For example, you can ref,very clear:&lt;br/&gt;
	func buttonPressed(Sender: AnyObject) {&lt;br/&gt;
		if let loc = self.selectedLocation {&lt;/p&gt;

&lt;p&gt;			let lat = loc.coordinate.latitude&lt;br/&gt;
			let long = loc.coordinate.longitude&lt;/p&gt;

&lt;p&gt;			let postBody = &quot;lat=&amp;#40;lat)&amp;amp;long=&amp;#40;long)&quot;&lt;/p&gt;

&lt;p&gt;			let req = NSMutableURLRequest(URL: NSURL(string: END_POINT)!)&lt;br/&gt;
			req.HTTPMethod = &quot;POST&quot;&lt;br/&gt;
			req.HTTPBody = postBody.dataUsingEncoding(NSUTF8StringEncoding)&lt;/p&gt;

&lt;p&gt;			let session = NSURLSession.sharedSession()&lt;/p&gt;

&lt;p&gt;			let task = session.dataTaskWithRequest(req, completionHandler: {&lt;br/&gt;
				(d:NSData?, res:NSURLResponse?, e:NSError?) -&amp;gt; Void in&lt;br/&gt;
				if let _ = e &lt;/p&gt;
{
					print(&quot;Request failed with error \(e!)&quot;)
				}
&lt;p&gt; else {&lt;/p&gt;

&lt;p&gt;					let strData =  String(data: d!, encoding: NSUTF8StringEncoding)&lt;br/&gt;
					print(&quot;Request succeeded with data &amp;#40;strData)&quot;)&lt;br/&gt;
					do {&lt;br/&gt;
						if let strOk = strData {&lt;br/&gt;
							let jsonDecoded = try JSONDecode().decode(strOk)&lt;br/&gt;
							if let jsonMap = jsonDecoded as? JSONDictionaryType {&lt;/p&gt;

&lt;p&gt;								if let sets = jsonMap.dictionary&lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;quot;resultSets&amp;quot;&amp;#93;&lt;/span&gt; as? JSONArrayType {&lt;br/&gt;
									// just one result in this app&lt;br/&gt;
									if let result = sets.array.first as? JSONDictionaryType {&lt;br/&gt;
										if let timeStr = result.dictionary&lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;quot;time&amp;quot;&amp;#93;&lt;/span&gt; as? String,&lt;br/&gt;
											let lat = result.dictionary&lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;quot;lat&amp;quot;&amp;#93;&lt;/span&gt; as? Double,&lt;br/&gt;
											let long = result.dictionary&lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;quot;long&amp;quot;&amp;#93;&lt;/span&gt; as? Double {&lt;/p&gt;

&lt;p&gt;												self.timeStr = timeStr&lt;br/&gt;
												self.lat = lat&lt;br/&gt;
												self.long = long&lt;/p&gt;

&lt;p&gt;												dispatch_async(dispatch_get_main_queue()) &lt;/p&gt;
{
													self.performSegueWithIdentifier(&quot;showMap&quot;, sender: self)
												}
&lt;p&gt;										}&lt;br/&gt;
									}&lt;br/&gt;
								}&lt;br/&gt;
							}&lt;br/&gt;
						}&lt;br/&gt;
					} catch let ex &lt;/p&gt;
{
						print(&quot;JSON decoding failed with exception \(ex)&quot;)
					}
&lt;p&gt;				}&lt;br/&gt;
			})&lt;/p&gt;

&lt;p&gt;			task.resume()&lt;/p&gt;

&lt;p&gt;		} else {&lt;br/&gt;
			// no location&lt;/p&gt;

&lt;p&gt;			let alert = UIAlertController(title: &quot;No Location&quot;, message: &quot;Ensure that location services are available and try again.&quot;, preferredStyle: .Alert)&lt;br/&gt;
			let action = UIAlertAction(title: &quot;OK&quot;, style: .Default) &lt;/p&gt;
{
				(a:UIAlertAction) -&amp;gt; Void in
			}
&lt;p&gt;			alert.addAction(action)&lt;br/&gt;
			self.presentViewController(alert, animated: true) { }&lt;br/&gt;
		}&lt;br/&gt;
	}&lt;/p&gt;</comment>
                            <comment id="10261" author="tuyenbq" created="Thu, 3 Dec 2015 03:34:54 -0500"  >&lt;p&gt;thank you, thank you and thank you so much guy. &lt;img class=&quot;emoticon&quot; src=&quot;http://jira.perfect.org:8080/images/icons/emoticons/thumbs_up.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="10262" author="tomikes" created="Sun, 20 Dec 2015 03:38:53 -0500"  >&lt;p&gt;I want an example to use the library to do the web background, it is best to have a picture of the kind!&lt;br/&gt;
help me&#12290;&#12290;&lt;/p&gt;</comment>
                            <comment id="10263" author="jonog" created="Tue, 21 Jun 2016 17:37:02 -0400"  >&lt;p&gt;Closing the issue as it&apos;s been addressed.&lt;br/&gt;
However &lt;a href=&quot;http://jira.perfect.org:8080/secure/ViewProfile.jspa?name=Tomikes&quot; class=&quot;user-hover&quot; rel=&quot;Tomikes&quot;&gt;shang zhang ping&lt;/a&gt; if you&apos;re still having issues could you open a new issue with some specifics and some code samples you&apos;re having problems with. Thanks!&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10400" key="com.atlassian.servicedesk.approvals-plugin:sd-approvals">
                        <customfieldname>Approvals</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10200" key="com.atlassian.jira.plugin.system.customfieldtypes:textfield">
                        <customfieldname>External issue ID</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10500" key="com.atlassian.servicedesk:sd-customer-organizations">
                        <customfieldname>Organizations</customfieldname>
                        <customfieldvalues>
                                
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10005" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i000kn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10101" key="com.atlassian.servicedesk:sd-request-participants">
                        <customfieldname>Request participants</customfieldname>
                        <customfieldvalues>
                                
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_10104" key="com.atlassian.servicedesk:sd-sla-field">
                        <customfieldname>Time to resolution</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>