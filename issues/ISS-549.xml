<!-- 
RSS generated by JIRA (7.3.0#73011-sha1:3c73d0e0b5ea20e2128531b9adf9b0585752b90a) at Tue Feb 06 20:51:58 UTC 2018

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
http://jira.perfect.org:8080/si/jira.issueviews:issue-xml/ISS-549/ISS-549.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>PerfectlySoft JIRA</title>
    <link>http://jira.perfect.org:8080</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>7.3.0</version>
        <build-number>73011</build-number>
        <build-date>03-01-2017</build-date>
    </build-info>

<item>
            <title>[ISS-549] Memory doesn&apos;t get freed in Perfect-PostgreSQL after closing Postgres connection.</title>
                <link>http://jira.perfect.org:8080/browse/ISS-549</link>
                <project id="10007" key="ISS">Issues</project>
                    <description></description>
                <environment></environment>
        <key id="11411">ISS-549</key>
            <summary>Memory doesn&apos;t get freed in Perfect-PostgreSQL after closing Postgres connection.</summary>
                <type id="10102" iconUrl="http://jira.perfect.org:8080/secure/viewavatar?size=xsmall&amp;avatarId=10303&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="http://jira.perfect.org:8080/images/icons/priorities/medium.svg">Medium</priority>
                        <status id="5" iconUrl="http://jira.perfect.org:8080/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="10100">Rejected</resolution>
                                        <assignee username="rocky">Rockford Wei</assignee>
                                    <reporter username="perfect.org@dpater.de">Daniel</reporter>
                            <created>Mon, 23 Oct 2017 04:47:48 -0400</created>
                <updated>Wed, 17 Jan 2018 16:30:48 -0500</updated>
                            <resolved>Wed, 17 Jan 2018 16:30:47 -0500</resolved>
                                                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="11922" author="perfect.org@dpater.de" created="Mon, 23 Oct 2017 04:53:14 -0400"  >&lt;p&gt;In Perfect-PostgresSQL, parts of the database result or connection metadata seem to stay in memory even after calling result.clear() and connection.finish(). This leads to problems when running many subsequent database queries, as more and more memory gets allocated.&lt;/p&gt;</comment>
                            <comment id="11983" author="rocky" created="Wed, 17 Jan 2018 16:30:48 -0500"  >&lt;p&gt;Hi Daniel,&#160;&lt;br/&gt;
I&apos;ve tested the case but found no leaks at all.&lt;/p&gt;

&lt;p&gt;Please feel free to check the testing script branch here:&lt;/p&gt;


&lt;p&gt;&lt;a href=&quot;https://github.com/PerfectlySoft/Perfect-PostgreSQL/pull/16/files&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/PerfectlySoft/Perfect-PostgreSQL/pull/16/files&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This script is fetching large records for many times, but my observation shows that the memory went stable after an increase in the first few loops - it might be just caching.&lt;/p&gt;



&lt;p&gt;You can try it yourself in Xcode instrument/profiling tools to reproduce the outcome from my script.&lt;/p&gt;



&lt;p&gt;Please note that if using OS X, an `autoreleasepool` may be helpful in loops, which will actually release cached resources that may seem to be a leak.&lt;/p&gt;



&lt;p&gt;Rocky.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10400" key="com.atlassian.servicedesk.approvals-plugin:sd-approvals">
                        <customfieldname>Approvals</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10100" key="com.atlassian.servicedesk:vp-origin">
                        <customfieldname>Customer Request Type</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10500" key="com.atlassian.servicedesk:sd-customer-organizations">
                        <customfieldname>Organizations</customfieldname>
                        <customfieldvalues>
                                
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10005" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0047r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10101" key="com.atlassian.servicedesk:sd-request-participants">
                        <customfieldname>Request participants</customfieldname>
                        <customfieldvalues>
                                
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_10104" key="com.atlassian.servicedesk:sd-sla-field">
                        <customfieldname>Time to resolution</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>