<!-- 
RSS generated by JIRA (7.3.0#73011-sha1:3c73d0e0b5ea20e2128531b9adf9b0585752b90a) at Tue Feb 06 20:48:41 UTC 2018

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
http://jira.perfect.org:8080/si/jira.issueviews:issue-xml/ISS-131/ISS-131.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>PerfectlySoft JIRA</title>
    <link>http://jira.perfect.org:8080</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>7.3.0</version>
        <build-number>73011</build-number>
        <build-date>03-01-2017</build-date>
    </build-info>

<item>
            <title>[ISS-131] MySQL connection</title>
                <link>http://jira.perfect.org:8080/browse/ISS-131</link>
                <project id="10007" key="ISS">Issues</project>
                    <description>&lt;p&gt;I am having trouble while connecting mysql in my perfect project. Can you provide a &lt;b&gt;sample code&lt;/b&gt;  ?&lt;/p&gt;</description>
                <environment></environment>
        <key id="10559">ISS-131</key>
            <summary>MySQL connection</summary>
                <type id="10109" iconUrl="http://jira.perfect.org:8080/secure/viewavatar?size=xsmall&amp;avatarId=10304&amp;avatarType=issuetype">Support Request</type>
                                                <status id="6" iconUrl="http://jira.perfect.org:8080/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="sumantimalsina9">sumantimalsina9</reporter>
                            <created>Mon, 22 Feb 2016 09:36:36 -0500</created>
                <updated>Wed, 22 Jun 2016 10:41:16 -0400</updated>
                                                                                <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="10486" author="lokinfey" created="Tue, 23 Feb 2016 21:54:33 -0500"  >&lt;p&gt;import PerfectLib  &lt;br/&gt;
import MySQL  &lt;/p&gt;


&lt;p&gt;let HOST = &quot;your sql ip&quot;  &lt;br/&gt;
let USER = &quot;your account&quot;  &lt;br/&gt;
let PASSWORD = &quot;your password&quot;  &lt;br/&gt;
let SCHEME = &quot;your scheme&quot;  &lt;/p&gt;

&lt;p&gt;public func PerfectServerModuleInit() {  &lt;/p&gt;

&lt;p&gt;    Routing.Handler.registerGlobally()  &lt;br/&gt;
    Routing.Routes[&quot;GET&quot;, &lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;quot;/&amp;quot;&amp;#93;&lt;/span&gt;] = &lt;/p&gt;
{ (_:WebResponse) in return PerfectHandler() }
&lt;p&gt;  &lt;br/&gt;
    print(&quot;&amp;#40;Routing.Routes.description)&quot;)  &lt;br/&gt;
}  &lt;/p&gt;

&lt;p&gt;//Create a handler for index Route  &lt;br/&gt;
class PerfectHandler: RequestHandler {  &lt;/p&gt;

&lt;p&gt;    func handleRequest(request: WebRequest, response: WebResponse) {  &lt;/p&gt;

&lt;p&gt;        response.addHeader(&quot;Content-Type&quot;, value: &quot;application/json&quot;)  &lt;br/&gt;
        response.addHeader(&quot;Content-Type&quot;, value: &quot;text/html; charset=utf-8&quot;)  &lt;/p&gt;

&lt;p&gt;        let mysql = MySQL()  &lt;br/&gt;
        let connect = mysql.connect(HOST, user: USER, password: PASSWORD)  &lt;br/&gt;
        if(connect)  &lt;br/&gt;
        {  &lt;br/&gt;
            let sres = mysql.selectDatabase(SCHEME)  &lt;br/&gt;
            if(sres)  &lt;br/&gt;
            {  &lt;/p&gt;

&lt;p&gt;                let sres2 = mysql.query(&quot;SELECT name,memo FROM Info&quot;)  &lt;/p&gt;

&lt;p&gt;                if(sres2)  &lt;br/&gt;
                {  &lt;br/&gt;
                    let results = mysql.storeResults()!  &lt;/p&gt;



&lt;p&gt;                    if(results.numRows()==0)  &lt;br/&gt;
                    {  &lt;br/&gt;
                        do&lt;/p&gt;
{  
                              
                              
                            let encoder = JSONEncoder()  
                            let data = try encoder.encode([&quot;result&quot;: &quot;&quot;])  
                            response.appendBodyString(data)  
                        }
&lt;p&gt;  &lt;br/&gt;
                        catch&lt;/p&gt;
{  
                            response.setStatus(500, message: &quot;Could not create data&quot;)  
                        }
&lt;p&gt;  &lt;br/&gt;
                    }  &lt;br/&gt;
                    else  &lt;br/&gt;
                    {  &lt;br/&gt;
                        var dataArray:Array&amp;lt;AnyObject&amp;gt; = []  &lt;br/&gt;
                        var dict = Dictionary&amp;lt;String,String&amp;gt;()  &lt;br/&gt;
                        while let row = results.next() &lt;/p&gt;
{  
                              
                            dict[&quot;name&quot;]=row[0];  
                            dataArray.append(dict)  
                              
                        }
&lt;p&gt;  &lt;/p&gt;

&lt;p&gt;                        print(NSJSONSerialization.isValidJSONObject(dataArray))  &lt;/p&gt;


&lt;p&gt;                        do &lt;/p&gt;
{  
                              
                              
                            let dataFinal = try NSJSONSerialization.dataWithJSONObject(dataArray, options:NSJSONWritingOptions(rawValue:0))  
                              
                            let string = NSString(data: dataFinal, encoding: NSUTF8StringEncoding)  
                              
                            let tee : String = string as! String  
                            response.appendBodyString(tee)  
                        }
&lt;p&gt;  &lt;br/&gt;
                        catch&lt;/p&gt;
{  
                            response.setStatus(500, message: &quot;Could not create data&quot;)  
                        }
&lt;p&gt;  &lt;/p&gt;



&lt;p&gt;                    }  &lt;/p&gt;




&lt;p&gt;                    results.close()  &lt;br/&gt;
                }  &lt;br/&gt;
            }  &lt;br/&gt;
            mysql.close()  &lt;br/&gt;
        }  &lt;br/&gt;
        response.requestCompletedCallback()  &lt;br/&gt;
    }  &lt;br/&gt;
}  &lt;/p&gt;

&lt;p&gt;if you want to learn more , go to my Chinese blog:&lt;br/&gt;
&lt;a href=&quot;http://blog.csdn.net/kinfey/article/details/50644752&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://blog.csdn.net/kinfey/article/details/50644752&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="10487" author="sumantimalsina9" created="Thu, 25 Feb 2016 08:57:47 -0500"  >&lt;p&gt;thank you. Can you give tell me how MVC pattern implies in Perfect Swift?&lt;br/&gt;
Also, I want to build a backend for my mobile application. &lt;/p&gt;</comment>
                            <comment id="10488" author="lokinfey" created="Thu, 25 Feb 2016 09:40:30 -0500"  >&lt;p&gt;okay i will write some tutorials about that . You can see my blog step by step &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/u014388424/article/category/6092861&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://blog.csdn.net/u014388424/article/category/6092861&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="10489" author="lucasc53" created="Thu, 25 Feb 2016 11:37:12 -0500"  >&lt;p&gt;Thanks @lokinfey!&lt;/p&gt;</comment>
                            <comment id="10490" author="lokinfey" created="Sat, 27 Feb 2016 02:15:38 -0500"  >&lt;p&gt;@sumantimalsina9  this is mvc pattern implies guideline for swift &lt;a href=&quot;http://blog.csdn.net/kinfey/article/details/50754770&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://blog.csdn.net/kinfey/article/details/50754770&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="10491" author="jonog" created="Wed, 22 Jun 2016 10:41:16 -0400"  >&lt;p&gt;Thanks &lt;a href=&quot;http://jira.perfect.org:8080/secure/ViewProfile.jspa?name=lokinfey&quot; class=&quot;user-hover&quot; rel=&quot;lokinfey&quot;&gt;Kinfey&lt;/a&gt; for helping here.&lt;br/&gt;
Closing issue. Thanks!&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10400" key="com.atlassian.servicedesk.approvals-plugin:sd-approvals">
                        <customfieldname>Approvals</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10200" key="com.atlassian.jira.plugin.system.customfieldtypes:textfield">
                        <customfieldname>External issue ID</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>118</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10500" key="com.atlassian.servicedesk:sd-customer-organizations">
                        <customfieldname>Organizations</customfieldname>
                        <customfieldvalues>
                                
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10005" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0015b:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10101" key="com.atlassian.servicedesk:sd-request-participants">
                        <customfieldname>Request participants</customfieldname>
                        <customfieldvalues>
                                
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_10104" key="com.atlassian.servicedesk:sd-sla-field">
                        <customfieldname>Time to resolution</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>