<!-- 
RSS generated by JIRA (7.3.0#73011-sha1:3c73d0e0b5ea20e2128531b9adf9b0585752b90a) at Tue Feb 06 20:48:30 UTC 2018

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
http://jira.perfect.org:8080/si/jira.issueviews:issue-xml/ISS-109/ISS-109.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>PerfectlySoft JIRA</title>
    <link>http://jira.perfect.org:8080</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>7.3.0</version>
        <build-number>73011</build-number>
        <build-date>03-01-2017</build-date>
    </build-info>

<item>
            <title>[ISS-109] Make request.postParams a dictionary instead of an Array of tuples</title>
                <link>http://jira.perfect.org:8080/browse/ISS-109</link>
                <project id="10007" key="ISS">Issues</project>
                    <description>&lt;p&gt;Currently the postParams in request object is having a type of &lt;tt&gt;Array&amp;lt;(String, String)&amp;gt;&lt;/tt&gt;, which is hard to find a particular value by it&apos;s key. In many web frameworks, the POST params is a dictionary(hash), including Rails/sinatra/tornado and php. I suggest to change it to a dictionary of type &lt;tt&gt;Dictionary&amp;lt;String, String&amp;gt;&lt;/tt&gt; for easier access.&lt;/p&gt;</description>
                <environment></environment>
        <key id="10537">ISS-109</key>
            <summary>Make request.postParams a dictionary instead of an Array of tuples</summary>
                <type id="10109" iconUrl="http://jira.perfect.org:8080/secure/viewavatar?size=xsmall&amp;avatarId=10304&amp;avatarType=issuetype">Support Request</type>
                                                <status id="6" iconUrl="http://jira.perfect.org:8080/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="johnlinvc">John Lin</reporter>
                            <created>Mon, 1 Feb 2016 03:40:11 -0500</created>
                <updated>Thu, 25 Feb 2016 15:40:34 -0500</updated>
                                                                                <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="10419" author="eimantas" created="Mon, 1 Feb 2016 05:55:41 -0500"  >&lt;p&gt;:+1: The &lt;tt&gt;Array&amp;lt;(String, String)&amp;gt;&lt;/tt&gt; also does not support nested parameters like &lt;tt&gt;foo&lt;span class=&quot;error&quot;&gt;&amp;#91;bar&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;baz&amp;#93;&lt;/span&gt;=jox&lt;/tt&gt;&lt;/p&gt;</comment>
                            <comment id="10420" author="kjessup" created="Mon, 1 Feb 2016 09:46:59 -0500"  >&lt;p&gt;POST and GET parameters can contain multiple values with the same key. Additionally, the order of the parameters is meaningful and so you can&apos;t simply aggregate them into a [String:&lt;span class=&quot;error&quot;&gt;&amp;#91;String&amp;#93;&lt;/span&gt;] structure.&lt;/p&gt;

&lt;p&gt;WebRequest already contains the following functions which let you pull value(s) by key:&lt;/p&gt;

&lt;p&gt;/// Returns the first GET or POST parameter with the given name&lt;br/&gt;
public func param(name: String) -&amp;gt; String?&lt;/p&gt;

&lt;p&gt;/// Returns the first GET or POST parameter with the given name&lt;br/&gt;
/// Returns the supplied default value if the parameter was not found&lt;br/&gt;
public func param(name: String, defaultValue: String) -&amp;gt; String&lt;/p&gt;

&lt;p&gt;/// Returns all GET or POST parameters with the given name&lt;br/&gt;
public func params(named: String) -&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;String&amp;#93;&lt;/span&gt;?&lt;/p&gt;</comment>
                            <comment id="10421" author="johnlinvc" created="Mon, 1 Feb 2016 10:11:46 -0500"  >&lt;p&gt;Yes, it&apos;s possible that parameter can contain multiple values with the same key. But there&apos;s no spec on how to deal with values with the same key, different servers can have different behavior. On page 9 of &lt;a href=&quot;https://www.owasp.org/images/b/ba/AppsecEU09_CarettoniDiPaola_v0.8.pdf&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;this report&lt;/a&gt; shows how different servers handle this. PHP has last occurrence, Python(mod_wsgi) has first occurrence.&lt;/p&gt;

&lt;p&gt;For the most frequent use cases, parameters usually have unique keys. And just like &lt;a href=&quot;http://jira.perfect.org:8080/secure/ViewProfile.jspa?name=eimantas&quot; class=&quot;user-hover&quot; rel=&quot;eimantas&quot;&gt;Eimantas&lt;/a&gt; said, it&apos;s hard to handle nested parameter in current interface.&lt;/p&gt;</comment>
                            <comment id="10422" author="kjessup" created="Thu, 25 Feb 2016 15:40:34 -0500"  >&lt;p&gt;I&apos;m closing this issue with the following reasons:&lt;br/&gt;
1. We already provide the requested functionality. That is, the ability to retrieve a GET/POST parameter by name with &lt;tt&gt;param(name: String) -&amp;gt; String?&lt;/tt&gt;&lt;br/&gt;
2. Switching the internal storage to be a Dictionary removes functionality. That is, the ability to have multiple key/value pairs with the same name.&lt;br/&gt;
3. Storing GET or POST parameters in a Dictionary, particularly one you do not have explicit source control over, opens the system up to hash collision DoS attacks.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10400" key="com.atlassian.servicedesk.approvals-plugin:sd-approvals">
                        <customfieldname>Approvals</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10200" key="com.atlassian.jira.plugin.system.customfieldtypes:textfield">
                        <customfieldname>External issue ID</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>96</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10500" key="com.atlassian.servicedesk:sd-customer-organizations">
                        <customfieldname>Organizations</customfieldname>
                        <customfieldvalues>
                                
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10005" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0010f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10101" key="com.atlassian.servicedesk:sd-request-participants">
                        <customfieldname>Request participants</customfieldname>
                        <customfieldvalues>
                                
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_10104" key="com.atlassian.servicedesk:sd-sla-field">
                        <customfieldname>Time to resolution</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>