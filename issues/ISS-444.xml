<!-- 
RSS generated by JIRA (7.3.0#73011-sha1:3c73d0e0b5ea20e2128531b9adf9b0585752b90a) at Tue Feb 06 20:51:10 UTC 2018

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
http://jira.perfect.org:8080/si/jira.issueviews:issue-xml/ISS-444/ISS-444.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>PerfectlySoft JIRA</title>
    <link>http://jira.perfect.org:8080</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>7.3.0</version>
        <build-number>73011</build-number>
        <build-date>03-01-2017</build-date>
    </build-info>

<item>
            <title>[ISS-444] PerfectCurl not sending post fields</title>
                <link>http://jira.perfect.org:8080/browse/ISS-444</link>
                <project id="10007" key="ISS">Issues</project>
                    <description></description>
                <environment></environment>
        <key id="11061">ISS-444</key>
            <summary>PerfectCurl not sending post fields</summary>
                <type id="10102" iconUrl="http://jira.perfect.org:8080/secure/viewavatar?size=xsmall&amp;avatarId=10303&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="http://jira.perfect.org:8080/images/icons/priorities/medium.svg">Medium</priority>
                        <status id="6" iconUrl="http://jira.perfect.org:8080/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="10001">Won&apos;t Do</resolution>
                                        <assignee username="rocky">Rockford Wei</assignee>
                                    <reporter username="chris@ourbigadventure.com">Chris Brown</reporter>
                            <created>Thu, 30 Mar 2017 22:02:39 -0400</created>
                <updated>Mon, 3 Apr 2017 09:41:18 -0400</updated>
                            <resolved>Fri, 31 Mar 2017 09:31:10 -0400</resolved>
                                                                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="11509" author="chris@ourbigadventure.com" created="Thu, 30 Mar 2017 22:07:58 -0400"  >&lt;p&gt;I am pretty confident that the data simply isn&apos;t being sent at all but it might be something I&apos;m doing.  Here is my code:&lt;/p&gt;

&lt;p&gt;  let url = &quot;https://ourbigadventure.com/testPost.php&quot; // &amp;lt;- echos post data&lt;br/&gt;
  let postParamString = &quot;source=webForm&quot;&lt;/p&gt;

&lt;p&gt;  let curl = CURL(url: url)&lt;br/&gt;
  curl.setOption(CURLOPT_POST, int: 1)&lt;br/&gt;
  curl.setOption(CURLOPT_POSTFIELDS, s: postParamString)&lt;/p&gt;

&lt;p&gt;  curl.perform &lt;/p&gt;
{ code, header, body in
    print(&quot;Request error code \(code) \n Response: \(curl.responseCode) \n Header: \(UTF8Encoding.encode(bytes:header)) \n Body: \(UTF8Encoding.encode(bytes: body))&quot;)
  }

&lt;p&gt;I&apos;ve had no trouble with CURLOPT_USERAGENT or CURLOPT_USERPWD but the CURLOPT_POSTFIELDS just doesn&apos;t seem to be sent at all.&lt;/p&gt;

&lt;p&gt;Am I sending it correctly?&lt;/p&gt;</comment>
                            <comment id="11510" author="rocky" created="Fri, 31 Mar 2017 09:30:52 -0400"  >&lt;p&gt;Hi Chris, Thanks for trying Perfect!&lt;/p&gt;

&lt;p&gt;I am not sure about your server&apos;s protocol but you can try the following code as listed in &lt;a href=&quot;https://github.com/PerfectlySoft/Perfect-CURL/blob/master/Tests/PerfectCURLTests/PerfectCURLTests.swift#L131-L137&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/PerfectlySoft/Perfect-CURL/blob/master/Tests/PerfectCURLTests/PerfectCURLTests.swift#L131-L137&lt;/a&gt;&#160;:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;let postParamString = &lt;span class=&quot;code-quote&quot;&gt;&quot;key1=value1&amp;amp;key2=value2&quot;&lt;/span&gt;
let byteArray = [UInt8](postParamString.utf8)
let curl = CURL(url: url)

let _ = curl.setOption(CURLOPT_POST, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;: 1)
let _ = curl.setOption(CURLOPT_POSTFIELDS, v: UnsafeMutableRawPointer(mutating: byteArray))
let _ = curl.setOption(CURLOPT_POSTFIELDSIZE, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;: byteArray.count)

let response = curl.performFully()
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;If need help, please join our slack channel: &lt;a href=&quot;http://perfect.ly/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://perfect.ly&lt;/a&gt;&#160;to get instant support from us and the whole community.&lt;/p&gt;

&lt;p&gt;&#160;&lt;/p&gt;

&lt;p&gt;Warm,&lt;/p&gt;

&lt;p&gt;Rocky.&lt;/p&gt;

&lt;p&gt;&#160;&lt;/p&gt;</comment>
                            <comment id="11511" author="chris@ourbigadventure.com" created="Fri, 31 Mar 2017 21:12:32 -0400"  >&lt;p&gt;Thanks Rocky!&lt;/p&gt;

&lt;p&gt;This actually solved my problem.  Using .performFully() was the trick I was looking for.&lt;/p&gt;</comment>
                            <comment id="11513" author="alexshubin" created="Mon, 3 Apr 2017 08:00:43 -0400"  >&lt;p&gt;More correct way in most cases go async. Try this solution&lt;/p&gt;

&lt;p&gt;&#160;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; cURL
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; PerfectCURL

&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class CurlHTTPRequest {
&#160;&#160; &#160;
&#160; &#160; &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; func post(url: &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, header: &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, body: &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, callback: @escaping (&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;)-&amp;gt;&lt;span class=&quot;code-object&quot;&gt;Void&lt;/span&gt;) {
&#160;&#160; &#160; &#160; &#160;
&#160; &#160; &#160; &#160; let byteArray:[UInt8] = Array(body.utf8)
&#160;&#160; &#160; &#160; &#160;
&#160; &#160; &#160; &#160; let pointer = UnsafeMutablePointer&amp;lt;UInt8&amp;gt;.allocate(capacity: byteArray.count)
&#160; &#160; &#160; &#160; pointer.initialize(from: byteArray, count: byteArray.count)
&#160;&#160; &#160; &#160; &#160;
&#160; &#160; &#160; &#160; let curlObject = CURL(url: url)
&#160; &#160; &#160; &#160; curlObject.setOption(CURLOPT_POST, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;: 1)
&#160; &#160; &#160; &#160; curlObject.setOption(CURLOPT_HTTPHEADER, s: header)
&#160; &#160; &#160; &#160; curlObject.setOption(CURLOPT_SSL_VERIFYPEER, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;: 0)
&#160; &#160; &#160; &#160; curlObject.setOption(CURLOPT_POSTFIELDS, v: pointer)
&#160; &#160; &#160; &#160; curlObject.setOption(CURLOPT_POSTFIELDSIZE, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;: byteArray.count)
&#160;&#160; &#160; &#160; &#160;
&#160; &#160; &#160; &#160; curlObject.perform { (code, header, body) in
&#160;&#160; &#160; &#160; &#160;
&#160; &#160; &#160; &#160; &#160; &#160; curlObject.close()
&#160;&#160; &#160; &#160; &#160;
&#160; &#160; &#160; &#160; &#160; &#160; callback(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;(bytes: body, encoding: .utf8) ?? &quot;&quot;)
&#160; &#160; &#160; &#160; }
&#160; &#160; }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="11515" author="rocky" created="Mon, 3 Apr 2017 09:41:18 -0400"  >&lt;p&gt;&lt;a href=&quot;http://jira.perfect.org:8080/secure/ViewProfile.jspa?name=AlexShubin&quot; class=&quot;user-hover&quot; rel=&quot;AlexShubin&quot;&gt;Alexey&lt;/a&gt; Thanks for the solution, however, if you find CPU overload when perform { } asynchronously, please let met know; if found, please replace your code by Threading.dispatch { curlObject.performFully() } with CURLOPT_TIMEOUT option before we releasing the ultimate solution.&lt;br/&gt;
Warm,&#160;&lt;br/&gt;
Rocky.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10400" key="com.atlassian.servicedesk.approvals-plugin:sd-approvals">
                        <customfieldname>Approvals</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10100" key="com.atlassian.servicedesk:vp-origin">
                        <customfieldname>Customer Request Type</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10500" key="com.atlassian.servicedesk:sd-customer-organizations">
                        <customfieldname>Organizations</customfieldname>
                        <customfieldvalues>
                                
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10005" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i003jz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10101" key="com.atlassian.servicedesk:sd-request-participants">
                        <customfieldname>Request participants</customfieldname>
                        <customfieldvalues>
                                
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_10104" key="com.atlassian.servicedesk:sd-sla-field">
                        <customfieldname>Time to resolution</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>